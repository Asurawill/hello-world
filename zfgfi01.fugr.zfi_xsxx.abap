FUNCTION ZFI_XSXX.
*"----------------------------------------------------------------------
*"*"本地接口：
*"  EXPORTING
*"     VALUE(R_MSG) TYPE  CHAR0256
*"  TABLES
*"      T_VKORG STRUCTURE  ZVKORG
*"      T_AUART STRUCTURE  ZAUART
*"      T_ZXSXX STRUCTURE  ZSSXX
*"----------------------------------------------------------------------
  RANGES:P_VKORG FOR VBAK-VKORG.
  RANGES:P_AUART FOR VBAK-AUART.
  DATA:GT_TVAKT LIKE TABLE OF TVAKT WITH HEADER LINE,
       GS_TVAKT LIKE TVAKT ,
       GT_VBKD  LIKE TABLE OF VBKD WITH HEADER LINE,
       GS_VBKD  LIKE VBKD ,
       GT_TVKO  LIKE TABLE OF TVKO WITH HEADER LINE,
       GS_TVKO  LIKE TVKO,
       GT_TVTWT LIKE TABLE OF TVTWT WITH HEADER LINE,
       GS_TVTWT LIKE TVTWT,
       GT_TVKOT LIKE TABLE OF TVKOT WITH HEADER LINE,
       GS_TVKOT LIKE TVKOT,
       GT_TSPAT LIKE TABLE OF TSPAT WITH HEADER LINE,
       GS_TSPAT LIKE TSPAT,
       GT_T001  LIKE TABLE OF T001 WITH HEADER LINE,
       GS_T001  LIKE T001  .

  IF T_VKORG[] IS NOT INITIAL.
   LOOP AT T_VKORG.
       TRANSLATE T_VKORG-VKORG  TO UPPER CASE.
     P_VKORG-SIGN = 'I'.
     P_VKORG-OPTION = 'EQ'.
     P_VKORG-LOW = T_VKORG-VKORG.
     APPEND P_VKORG.
     ENDLOOP.
ENDIF.
IF T_AUART[] IS NOT INITIAL.
  LOOP AT T_AUART.
     TRANSLATE T_AUART-AUART TO UPPER CASE.
     P_AUART-SIGN = 'I'.
     P_AUART-OPTION = 'EQ'.
     P_AUART-LOW = T_AUART-AUART.
     APPEND P_AUART.
    ENDLOOP.
  ENDIF.
 SELECT  VBELN AUART ERDAT VKORG VTWEG SPART ZSD0302 INTO CORRESPONDING FIELDS OF TABLE T_ZXSXX
    FROM VBAK
   WHERE VKORG IN P_VKORG  AND AUART IN P_AUART.
   IF T_ZXSXX[] IS NOT INITIAL.
  SELECT VBELN POSNR BSTKD
    INTO CORRESPONDING FIELDS OF TABLE GT_VBKD
    FROM VBKD
    FOR ALL ENTRIES IN T_ZXSXX
    WHERE VBELN = T_ZXSXX-VBELN
    AND POSNR = '000000' .
  SORT GT_VBKD BY VBELN .
  SELECT * INTO CORRESPONDING FIELDS OF TABLE GT_TVAKT
    FROM TVAKT
    WHERE SPRAS = '1'.
  SORT GT_TVAKT BY AUART.
  SELECT * INTO CORRESPONDING FIELDS OF TABLE GT_TVKO
    FROM TVKO
    WHERE VKORG IN P_VKORG .
  SORT GT_TVKO BY VKORG.
  SELECT * INTO CORRESPONDING FIELDS OF TABLE  GT_TVTWT
    FROM TVTWT
    WHERE SPRAS = '1'.
 SORT GT_TVTWT BY VTWEG.
 SELECT * INTO CORRESPONDING FIELDS OF TABLE GT_TVKOT
   FROM TVKOT
   WHERE SPRAS = '1'.
 SORT GT_TVKOT BY  VKORG.
 SELECT * INTO CORRESPONDING FIELDS OF TABLE GT_TSPAT
   FROM TSPAT
   WHERE SPRAS = '1'.
SORT GT_TSPAT BY SPART.
SELECT * INTO CORRESPONDING FIELDS OF TABLE GT_T001
  FROM T001.
SORT GT_T001 BY BUKRS.

  DATA L_TDNAME TYPE THEAD-TDNAME.
  DATA T_TLINE TYPE TABLE OF TLINE WITH HEADER LINE.
LOOP AT T_ZXSXX.
    "订单类型描述
    READ TABLE GT_TVAKT INTO GS_TVAKT WITH KEY AUART = T_ZXSXX-AUART BINARY SEARCH.
      IF SY-SUBRC = 0 .
        T_ZXSXX-BEZEI = GT_TVAKT-BEZEI.
      ENDIF.
    "合同编号
    READ TABLE GT_VBKD INTO GS_VBKD WITH KEY VBELN = T_ZXSXX-VBELN BINARY SEARCH.
       IF SY-SUBRC = 0 .
          T_ZXSXX-BSTKD = GS_VBKD-BSTKD.
       ENDIF.
     "公司代码
     READ TABLE GT_TVKO INTO GS_TVKO WITH KEY VKORG = T_ZXSXX-VKORG BINARY SEARCH.
       IF SY-SUBRC = 0.
          T_ZXSXX-BUKRS = GS_TVKO-BUKRS.
       ENDIF.
     "分销渠道名称
     READ TABLE GT_TVTWT INTO GS_TVTWT WITH KEY VTWEG = T_ZXSXX-VTWEG BINARY SEARCH.
        IF SY-SUBRC = 0.
          T_ZXSXX-FXQDMC = GS_TVTWT-VTEXT.
        ENDIF.
      "销售组织名称
      READ TABLE GT_TVKOT INTO GS_TVKOT WITH KEY VKORG = T_ZXSXX-VKORG BINARY SEARCH.
        IF SY-SUBRC = 0.
           T_ZXSXX-XSZZMC = GS_TVKOT-VTEXT.
        ENDIF.
      "产品组名称
     READ TABLE GT_TSPAT INTO GS_TSPAT WITH KEY SPART = T_ZXSXX-SPART BINARY SEARCH.
      IF SY-SUBRC = 0.
        T_ZXSXX-CPZMC = GS_TSPAT-VTEXT.
      ENDIF.
      "公司代码名称
    READ TABLE GT_T001 INTO GS_T001 WITH KEY BUKRS = T_ZXSXX-BUKRS BINARY SEARCH.
      IF SY-SUBRC = 0.
        T_ZXSXX-BUTXT = GS_T001-BUTXT.
       ENDIF.
  L_TDNAME = T_ZXSXX-VBELN.
  CLEAR:T_TLINE[] ,T_TLINE.
  CALL FUNCTION 'READ_TEXT'
    EXPORTING
*     CLIENT                        = SY-MANDT
      ID                            = 'Z001'
      LANGUAGE                      = SY-LANGU
      NAME                          = L_TDNAME
      OBJECT                        = 'VBBK'
*     ARCHIVE_HANDLE                = 0
*     LOCAL_CAT                     = ' '
*   IMPORTING
*     HEADER                        =
*     OLD_LINE_COUNTER              =
    TABLES
      LINES                         = T_TLINE[]
    EXCEPTIONS
      ID                            = 1
      LANGUAGE                      = 2
      NAME                          = 3
      NOT_FOUND                     = 4
      OBJECT                        = 5
      REFERENCE_CHECK               = 6
      WRONG_ACCESS_TO_ARCHIVE       = 7
      OTHERS                        = 8
            .
     IF T_TLINE[] IS NOT INITIAL.
       LOOP AT T_TLINE.
        CONCATENATE  T_ZXSXX-XMMC T_TLINE-TDLINE INTO T_ZXSXX-XMMC.
       ENDLOOP..
       ENDIF.
        MODIFY T_ZXSXX.
   ENDLOOP.
    ENDIF.
SORT T_ZXSXX BY BUKRS VKORG VTWEG SPART VBELN .
IF T_ZXSXX[] IS NOT  INITIAL.
 R_MSG = '据读取成功,请查看T_XSXX表'.
 ELSE.
 R_MSG =  '数据读取失败,请重新更新检索条件' .
  ENDIF.
ENDFUNCTION.
