FUNCTION ZPS002_2.
*"----------------------------------------------------------------------
*"*"本地接口：
*"  IMPORTING
*"     VALUE(I_PSPID) TYPE  PROJ-PSPID
*"     VALUE(I_POST1) TYPE  PROJ-POST1
*"     VALUE(I_WERKS) TYPE  T001W-WERKS
*"  EXPORTING
*"     VALUE(E_RETURN) TYPE  ZPS002_05
*"  TABLES
*"      E_MSG STRUCTURE  BAPI_METH_MESSAGE OPTIONAL
*"----------------------------------------------------------------------

* 数据校验
  IF I_PSPID IS INITIAL .
    E_RETURN-TYPE = 'E' .
    E_RETURN-MESSAGE = '项目结构创建失败!' .
    E_MSG-MESSAGE_TYPE = 'E'.
    E_MSG-MESSAGE_TEXT = '项目定义参数不能为空！'.
    APPEND E_MSG .
    RETURN .
  ENDIF.
  IF I_POST1 IS INITIAL .
    E_RETURN-TYPE = 'E' .
    E_RETURN-MESSAGE = '项目结构创建失败!' .
    E_MSG-MESSAGE_TYPE = 'E'.
    E_MSG-MESSAGE_TEXT = '项目名称参数不能为空！'.
    APPEND E_MSG .
    RETURN .
  ENDIF.
  IF I_WERKS IS INITIAL .
    E_RETURN-TYPE = 'E' .
    E_RETURN-MESSAGE = '项目结构创建失败!' .
    E_MSG-MESSAGE_TYPE = 'E'.
    E_MSG-MESSAGE_TEXT = '工厂参数不能为空！'.
    APPEND E_MSG .
    RETURN .
  ENDIF.

* 判断每阶段是否执行成功的标记，成功打上X
  DATA: L_PROJ    TYPE C,
        L_WBS     TYPE C,
        L_NETWROK TYPE C,
        L_ACTIV   TYPE C.

  DATA LS_PROJ TYPE BAPI_PROJECT_DEFINITION .
  DATA LS_RETURN1 TYPE BAPIRETURN1 .
  DATA LT_MSG1 TYPE TABLE OF BAPI_METH_MESSAGE WITH HEADER LINE .

  LS_PROJ-PROJECT_DEFINITION = I_PSPID .
  LS_PROJ-DESCRIPTION = I_POST1 .
  CONCATENATE 'ZPS' I_WERKS INTO LS_PROJ-PROJECT_PROFILE .
  CONCATENATE 'ZPS' I_WERKS INTO LS_PROJ-NETWORK_PROFILE .

  CALL FUNCTION 'BAPI_PROJECTDEF_CREATE'
    EXPORTING
      PROJECT_DEFINITION_STRU = LS_PROJ
    IMPORTING
      RETURN                  = LS_RETURN1
    TABLES
      E_MESSAGE_TABLE         = LT_MSG1[].

  IF LS_RETURN1-TYPE = 'E' OR LS_RETURN1-TYPE = 'A'.
    CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK' .
    IF LS_RETURN1-ID = 'CJ' AND LS_RETURN1-NUMBER = 010 .
      E_RETURN-TYPE = 'E' .
      E_RETURN-MESSAGE = LS_RETURN1-MESSAGE .
    ELSE .
      E_RETURN-TYPE = 'E' .
      E_RETURN-MESSAGE = '项目结构创建失败!'.
    ENDIF.
    PERFORM FRM_MSG1 TABLES E_MSG[] LT_MSG1[] .
    RETURN .
  ELSE.
    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      EXPORTING
        WAIT = 'X'.
    E_RETURN-TYPE = 'S'.
    E_RETURN-MESSAGE = '项目结构创建成功！'.
    E_RETURN-PROJ = LS_PROJ-PROJECT_DEFINITION .
    L_PROJ = 'X'.
  ENDIF.

  IF L_PROJ = 'X'.

* 创建WBS元素
    DATA LT_WBS TYPE TABLE OF BAPI_BUS2054_NEW WITH HEADER LINE .
    DATA LT_RETURN2 TYPE TABLE OF BAPIRET2 WITH HEADER LINE .
    DATA LT_RETURN3_1 TYPE TABLE OF BAPIRET2 WITH HEADER LINE .

    CALL FUNCTION 'BAPI_PS_INITIALIZATION'.

    "首层
    LT_WBS-WBS_ELEMENT = I_PSPID .
    LT_WBS-DESCRIPTION = I_POST1 .
    LT_WBS-WBS_BILLING_ELEMENT = 'X' .
    APPEND LT_WBS .
    CLEAR LT_WBS .

    CALL FUNCTION 'BAPI_BUS2054_CREATE_MULTI'
      EXPORTING
        I_PROJECT_DEFINITION = LS_PROJ-PROJECT_DEFINITION
      TABLES
        IT_WBS_ELEMENT       = LT_WBS[]
        ET_RETURN            = LT_RETURN2[].

    READ TABLE LT_RETURN2 WITH KEY TYPE = 'E'.
    IF SY-SUBRC = 0 .
      CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK' .
      E_RETURN-TYPE = 'E'.
      E_RETURN-MESSAGE = '项目结构创建失败！'.
      PERFORM FRM_MSG2 TABLES E_MSG[] LT_RETURN2[] .
      RETURN .
    ELSEIF SY-SUBRC <> 0 .
      READ TABLE LT_RETURN2 WITH KEY TYPE = 'A'.
      IF SY-SUBRC = 0 .
        CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK' .
        E_RETURN-TYPE = 'E'.
        E_RETURN-MESSAGE = '项目结构创建失败！'.
        PERFORM FRM_MSG2 TABLES E_MSG[] LT_RETURN2[] .
        RETURN .
      ELSE .
        CALL FUNCTION 'BAPI_PS_PRECOMMIT'
          TABLES
            ET_RETURN = LT_RETURN3_1[].
        READ TABLE LT_RETURN3_1 WITH KEY TYPE = 'E'.
        IF SY-SUBRC = 0 .
          CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK' .
          E_RETURN-TYPE = 'E'.
          E_RETURN-MESSAGE = '项目结构创建失败！'.
          PERFORM FRM_MSG2 TABLES E_MSG[] LT_RETURN3_1[] .
          RETURN .
        ELSEIF SY-SUBRC <> 0 .
          READ TABLE LT_RETURN3_1 WITH KEY TYPE = 'A'.
          IF SY-SUBRC = 0 .
            CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK' .
            E_RETURN-TYPE = 'E'.
            E_RETURN-MESSAGE = '项目结构创建失败！'.
            PERFORM FRM_MSG2 TABLES E_MSG[] LT_RETURN3_1[] .
            RETURN .
          ELSEIF SY-SUBRC <> 0.
            CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
              EXPORTING
                WAIT = 'X'.
            E_RETURN-TYPE = 'S'.
            E_RETURN-MESSAGE = '项目结构创建成功！'.
            LOOP AT LT_WBS.
              CONCATENATE E_RETURN-WBS LT_WBS-WBS_ELEMENT ';' INTO E_RETURN-WBS .
            ENDLOOP.
            L_WBS = 'X'.
          ENDIF.
        ENDIF.
      ENDIF.
    ENDIF.

  ENDIF.

  IF L_WBS EQ 'X' .

* 网络表头创建
    DATA LS_NETWORK TYPE BAPI_BUS2002_NEW .
    DATA LT_RETURN4 TYPE TABLE OF BAPIRET2 WITH HEADER LINE .
    DATA LT_RETURN3_2 TYPE TABLE OF BAPIRET2 WITH HEADER LINE .

    CONCATENATE 'ZPS' I_WERKS INTO LS_NETWORK-PROFILE .
    LS_NETWORK-SHORT_TEXT = '材料清单' .
    LS_NETWORK-SCHED_TYPE = '1'.
    LS_NETWORK-PROJECT_DEFINITION = I_PSPID .
    LS_NETWORK-WBS_ELEMENT = I_PSPID .

    CALL FUNCTION 'BAPI_PS_INITIALIZATION'.
    CALL FUNCTION 'BAPI_BUS2002_CREATE'
      EXPORTING
        I_NETWORK = LS_NETWORK
      TABLES
        ET_RETURN = LT_RETURN4[].
    READ TABLE LT_RETURN4 WITH KEY TYPE = 'E'.
    IF SY-SUBRC = 0 .
      CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK' .
      E_RETURN-TYPE = 'E'.
      E_RETURN-MESSAGE = '项目结构创建失败！'.
      PERFORM FRM_MSG2 TABLES E_MSG[] LT_RETURN4[] .
      RETURN .
    ELSEIF SY-SUBRC <> 0 .
      READ TABLE LT_RETURN4 WITH KEY TYPE = 'A'.
      IF SY-SUBRC = 0 .
        CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK' .
        E_RETURN-TYPE = 'E'.
        E_RETURN-MESSAGE = '项目结构创建失败！'.
        PERFORM FRM_MSG2 TABLES E_MSG[] LT_RETURN4[] .
        RETURN .
      ELSEIF SY-SUBRC <> 0 .
        CALL FUNCTION 'BAPI_PS_PRECOMMIT'
          TABLES
            ET_RETURN = LT_RETURN3_2[].
        READ TABLE LT_RETURN3_2 WITH KEY TYPE = 'E'.
        IF SY-SUBRC = 0 .
          CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK' .
          E_RETURN-TYPE = 'E'.
          E_RETURN-MESSAGE = '项目结构创建失败！'.
          PERFORM FRM_MSG2 TABLES E_MSG[] LT_RETURN3_2[] .
          RETURN .
        ELSEIF SY-SUBRC <> 0 .
          READ TABLE LT_RETURN3_2 WITH KEY TYPE = 'A'.
          IF SY-SUBRC = 0 .
            CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK' .
            E_RETURN-TYPE = 'E'.
            E_RETURN-MESSAGE = '项目结构创建失败！'.
            PERFORM FRM_MSG2 TABLES E_MSG[] LT_RETURN3_2[] .
            RETURN .
          ELSEIF SY-SUBRC <> 0 .
            CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
              EXPORTING
                WAIT = 'X'.
            E_RETURN-TYPE = 'S'.
            E_RETURN-MESSAGE = '项目结构创建成功！'.
            READ TABLE LT_RETURN3_2 WITH KEY TYPE = 'S'
                                             ID = 'CNIF_PI'
                                             NUMBER = '003' .
            IF SY-SUBRC = 0 .
              CONCATENATE E_RETURN-NETWORK LT_RETURN3_2-MESSAGE_V2 ';' INTO E_RETURN-NETWORK .
            ENDIF.
            L_NETWROK = 'X'.
          ENDIF.
        ENDIF.
      ENDIF.
    ENDIF.

  ENDIF.

  IF L_NETWROK EQ 'X' .

* 网络作业创建
    DATA:LS_PROJ2  TYPE BAPI_PROJECT_DEFINITION,
         LS_PROJ2X TYPE BAPI_PROJECT_DEFINITION_UP.
    DATA LS_RETURN2 TYPE BAPIRETURN1 .
    DATA LT_METHOD TYPE TABLE OF BAPI_METHOD_PROJECT WITH HEADER LINE .
    DATA:LT_ACTIV  TYPE TABLE OF BAPI_NETWORK_ACTIVITY WITH HEADER LINE,
         LT_ACTIVX TYPE TABLE OF BAPI_NETWORK_ACTIVITY_UP WITH HEADER LINE.
    DATA E_MSG2 TYPE TABLE OF BAPI_METH_MESSAGE WITH HEADER LINE .

    LS_PROJ2-PROJECT_DEFINITION = I_PSPID .
    IF LS_PROJ2-PROJECT_DEFINITION IS NOT INITIAL .
      LS_PROJ2X-PROJECT_DEFINITION = 'X'.
    ENDIF.

    LT_METHOD-REFNUMBER = 000001 .
    LT_METHOD-OBJECTTYPE = 'NETWORK-ACTIVITY' .
    LT_METHOD-METHOD = 'Create' .
    CONCATENATE LT_RETURN3_2-MESSAGE_V2 '0010' INTO LT_METHOD-OBJECTKEY .
    APPEND LT_METHOD .
    CLEAR LT_METHOD .

    LT_METHOD-METHOD = 'Save' .
    APPEND LT_METHOD .
    CLEAR LT_METHOD .

    LT_ACTIV-PROJECT_DEFINITION = I_PSPID .
    LT_ACTIV-NETWORK = LT_RETURN3_2-MESSAGE_V2 .
    LT_ACTIV-ACTIVITY = '0010' .
    LT_ACTIV-CONTROL_KEY = 'PS01' .
    LT_ACTIV-DESCRIPTION = '材料清单' .
    APPEND LT_ACTIV .
    CLEAR LT_ACTIV .

    IF LT_ACTIV-NETWORK IS NOT INITIAL .
      LT_ACTIVX-NETWORK = 'X'.
    ENDIF.
    IF LT_ACTIV-ACTIVITY IS NOT INITIAL .
      LT_ACTIVX-ACTIVITY = 'X'.
    ENDIF.
    IF LT_ACTIV-CONTROL_KEY IS NOT INITIAL .
      LT_ACTIVX-CONTROL_KEY = 'X'.
    ENDIF.
    IF LT_ACTIV-DESCRIPTION IS NOT INITIAL .
      LT_ACTIVX-DESCRIPTION = 'X'.
    ENDIF.
    APPEND LT_ACTIVX .
    CLEAR LT_ACTIVX .

    CALL FUNCTION 'BAPI_PROJECT_MAINTAIN'
      EXPORTING
        I_PROJECT_DEFINITION     = LS_PROJ2
        I_PROJECT_DEFINITION_UPD = LS_PROJ2X
      IMPORTING
        RETURN                   = LS_RETURN2
      TABLES
        I_METHOD_PROJECT         = LT_METHOD[]
        I_ACTIVITY               = LT_ACTIV[]
        I_ACTIVITY_UPDATE        = LT_ACTIVX[]
        E_MESSAGE_TABLE          = E_MSG2[].
    IF LS_RETURN2-TYPE = 'E' OR LS_RETURN2-TYPE = 'A'.
      CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK' .
      E_RETURN-TYPE = LS_RETURN2-TYPE .
      E_RETURN-MESSAGE = LS_RETURN2-MESSAGE .
      PERFORM FRM_MSG1 TABLES E_MSG[] E_MSG2[] .
      RETURN .
    ELSE.
      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          WAIT = 'X'.
      E_RETURN-TYPE = 'S'.
      E_RETURN-MESSAGE = '项目结构创建成功！'.
      E_RETURN-ACTIVITY = '0010' .
      L_ACTIV = 'X'.
    ENDIF.

  ENDIF.

  IF L_ACTIV EQ 'X' .

* 下达项目
    DATA LS_RETURN3 TYPE BAPIRETURN1 .
    DATA LT_MSG2 TYPE TABLE OF BAPI_STATUS_RESULT WITH HEADER LINE .
    DATA LT_RETURN3_3 TYPE TABLE OF BAPIRET2 WITH HEADER LINE .

    WAIT UP TO 1 SECONDS .
    CALL FUNCTION 'BAPI_PS_INITIALIZATION'.
    CALL FUNCTION 'BAPI_BUS2001_SET_STATUS'
      EXPORTING
        PROJECT_DEFINITION = LS_PROJ-PROJECT_DEFINITION
        SET_SYSTEM_STATUS  = 'REL'
      IMPORTING
        RETURN             = LS_RETURN3
      TABLES
        E_RESULT           = LT_MSG2[].
    IF LS_RETURN3-TYPE = 'E' OR LS_RETURN3-TYPE = 'A'.
      CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK' .
      E_RETURN-TYPE = LS_RETURN3-TYPE .
      E_RETURN-MESSAGE = LS_RETURN3-MESSAGE .
      PERFORM FRM_MSG3 TABLES E_MSG[] LT_MSG2[] .
      RETURN .
    ELSE.
      CALL FUNCTION 'BAPI_PS_PRECOMMIT'
        TABLES
          ET_RETURN = LT_RETURN3_3.
      READ TABLE LT_RETURN3_3 WITH KEY TYPE = 'E'.
      IF SY-SUBRC = 0 .
        CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK' .
        E_RETURN-TYPE = 'E'.
        E_RETURN-MESSAGE = '项目结构创建失败！'.
        PERFORM FRM_MSG2 TABLES E_MSG[] LT_RETURN3_3[] .
        RETURN .
      ELSEIF SY-SUBRC <> 0 .
        READ TABLE LT_RETURN3_3 WITH KEY TYPE = 'A'.
        IF SY-SUBRC = 0 .
          CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK' .
          E_RETURN-TYPE = 'E'.
          E_RETURN-MESSAGE = '项目结构创建失败！'.
          PERFORM FRM_MSG2 TABLES E_MSG[] LT_RETURN3_3[] .
          RETURN .
        ELSEIF SY-SUBRC <> 0 .
          CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
            EXPORTING
              WAIT = 'X'.
          E_RETURN-TYPE = 'S'.
          E_RETURN-MESSAGE = '项目结构创建成功！'.
          E_RETURN-STATUS = 'I0002' .
        ENDIF.
      ENDIF.
    ENDIF.

  ENDIF.

ENDFUNCTION.
