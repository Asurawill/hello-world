*&---------------------------------------------------------------------*
*&  包含                ZMM002_FORM
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&变更记录：                                                           *
*&Date         Developer           ReqNo       Descriptions            *
*& ==========  ==================  ==========  ========================*
*& 2016-12-30  it02                ED1K905147   增加 “是否需要上传受控文件”特征值
*&---------------------------------------------------------------------*

FORM FRM_DATA01.
  DATA:DHH1 TYPE STRING,
       DHH2 TYPE STRING.
  CLEAR: IT_MARD,IT_MARD[].

  SELECT A~MATNR
         BISMT
         MBRSH
         MTART
         MEINS
         MATKL
         SPART
         FERTH
         NORMT
         ZEINR
         AESZN
         A~ERSDA
         MSTAE
         MAKTX
*         WERKS
*         BESKZ
         MHDRZ
         MHDHB
         MHDHB
         IPRKZ
         BSTME
         LABOR
         EXTWG
         LAEDA
         ERSDA
         LAENG
         BREIT
         HOEHE
         MEABM
         MAGRV
         LVORM
    FROM MARA AS A INNER JOIN MAKT AS B
    ON A~MATNR = B~MATNR
*    INNER JOIN MARC AS C
*    ON A~MATNR = C~MATNR
    INTO  CORRESPONDING FIELDS OF TABLE IT_JBST
    WHERE A~MATNR IN S_MATNR
      AND MTART   IN S_MTART
      AND MATKL   IN S_MATKL
      AND A~EXTWG IN S_EXTWG
      AND A~LAEDA IN S_LAEDA
      AND A~ERSDA IN S_ERSDA
      AND MSTAE   IN S_MSTAE
*      AND WERKS   IN S_WERKS
*      AND BESKZ   IN S_BESKZ
      AND BISMT   IN S_BISMT
      AND SPRAS   = SY-LANGU.

  DATA:LT_PRDKZT TYPE STANDARD TABLE OF PRDKZT WITH HEADER LINE.
  CLEAR:LT_PRDKZT.
  DATA:LT_MAKT_EN TYPE STANDARD TABLE OF MAKT WITH HEADER LINE.
  CLEAR:LT_MAKT_EN.
  DATA:LT_MAKT_Z1 TYPE STANDARD TABLE OF MAKT WITH HEADER LINE.
  CLEAR:LT_MAKT_Z1.
  DATA:L_OBJECT LIKE BAPI1003_KEY-OBJECT.

*&--代码添加 BY HANDYBY 26.04.2017 11:36:37  BEGIN
  DATA: BEGIN OF LS_OBJEK,
          OBJEK LIKE AUSP-OBJEK,
          ATINN LIKE AUSP-ATINN,
          ATNAM LIKE CABN-ATNAM,
          ATWRT LIKE AUSP-ATWRT,
        END OF LS_OBJEK.
  DATA LT_OBJEK LIKE TABLE OF LS_OBJEK .
  DATA: BEGIN OF LS_MATNR,
          OBJEK LIKE AUSP-OBJEK,
        END OF LS_MATNR.
  DATA LT_MATNR LIKE TABLE OF LS_MATNR.
  DATA: BEGIN OF LS_ATNAM,
          ATNAM LIKE CABN-ATNAM,
          ATWRT LIKE AUSP-ATWRT,
        END OF LS_ATNAM.
  DATA LT_ATNAM LIKE TABLE OF LS_ATNAM.

  IF IT_JBST[] IS NOT INITIAL .
    LOOP AT IT_JBST.
      LS_MATNR-OBJEK = IT_JBST-MATNR .
      APPEND LS_MATNR TO LT_MATNR .
      CLEAR LS_MATNR.
    ENDLOOP.
    SELECT A~OBJEK
         A~ATINN
         C~ATNAM
         A~ATWRT
    INTO CORRESPONDING FIELDS OF TABLE LT_OBJEK
    FROM AUSP AS A
   INNER JOIN CABN AS C
      ON A~ATINN = C~ATINN
     FOR ALL ENTRIES IN LT_MATNR
   WHERE A~OBJEK = LT_MATNR-OBJEK.
    SORT LT_OBJEK BY OBJEK.
  ENDIF.
*&--代码添加 BY HANDYBY 26.04.2017 11:36:37  END

  IF IT_JBST[] IS NOT INITIAL.
    SELECT LGORT
           MATNR
    FROM MARD
    INTO CORRESPONDING FIELDS OF TABLE IT_MARD
    FOR ALL ENTRIES IN IT_JBST
     WHERE MATNR = IT_JBST-MATNR.
*&--代码添加 BY HANDYBY 25.04.2017 17:38:39  BEGIN
    SORT IT_MARD BY MATNR .
*&--代码添加 BY HANDYBY 25.04.2017 17:38:39  END

    " 取得 SLED的期间标识字段
    SELECT *
      FROM PRDKZT
      INTO CORRESPONDING FIELDS OF TABLE LT_PRDKZT
      FOR ALL ENTRIES IN  IT_JBST
      WHERE IPRKZ = IT_JBST-IPRKZ
      AND SPRAS = SY-LANGU.
*&--代码添加 BY HANDYBY 25.04.2017 17:39:05  BEGIN
    SORT LT_PRDKZT BY IPRKZ.
*&--代码添加 BY HANDYBY 25.04.2017 17:39:05  END

    SELECT *
      FROM MAKT
      INTO CORRESPONDING FIELDS OF TABLE LT_MAKT_EN
      FOR ALL ENTRIES IN   IT_JBST
      WHERE MATNR = IT_JBST-MATNR
      AND SPRAS = 'E'.
*&--代码添加 BY HANDYBY 25.04.2017 17:38:25  BEGIN
    SORT LT_MAKT_EN BY MATNR .
*&--代码添加 BY HANDYBY 25.04.2017 17:38:25  END


    SELECT *
     FROM MAKT
     INTO CORRESPONDING FIELDS OF TABLE LT_MAKT_Z1
     FOR ALL ENTRIES IN   IT_JBST
     WHERE MATNR = IT_JBST-MATNR
     AND SPRAS = 'Z1'.
*&--代码添加 BY HANDYBY 25.04.2017 17:38:11  BEGIN
    SORT LT_MAKT_Z1 BY MATNR .
*&--代码添加 BY HANDYBY 25.04.2017 17:38:11  END
  ENDIF.

  LOOP AT IT_JBST.
    L_OBJECT = IT_JBST-MATNR.

    REFRESH IT_CHAR[].
    CLEAR IT_CHAR.

*获取特性

*&--代码注释 BY HANDYBY 26.04.2017 11:37:31  BEGIN
*    CALL FUNCTION 'BAPI_OBJCL_GETDETAIL'
*      EXPORTING
*        OBJECTKEY       = L_OBJECT
*        OBJECTTABLE     = 'MARA'
*        CLASSNUM        = 'LYD001'
*        CLASSTYPE       = '001'
*      TABLES
*        ALLOCVALUESNUM  = IT_NUM
*        ALLOCVALUESCHAR = IT_CHAR
*        ALLOCVALUESCURR = IT_CURR
*        RETURN          = IT_RET.
*&--代码注释 BY HANDYBY 26.04.2017 11:37:31  END

*&--代码添加 BY HANDYBY 26.04.2017 11:37:45  BEGIN
    READ TABLE LT_OBJEK WITH KEY OBJEK = IT_JBST-MATNR BINARY SEARCH TRANSPORTING NO FIELDS .
    IF SY-SUBRC = 0 .
      REFRESH LT_ATNAM.
      CLEAR LS_ATNAM.
      LOOP AT LT_OBJEK INTO LS_OBJEK FROM SY-TABIX .
        IF LS_OBJEK-OBJEK = IT_JBST-MATNR .
          LS_ATNAM-ATNAM = LS_OBJEK-ATNAM .
          LS_ATNAM-ATWRT = LS_OBJEK-ATWRT.
          APPEND LS_ATNAM TO LT_ATNAM .
          CLEAR LS_ATNAM .
        ELSE.
          EXIT.
        ENDIF.
        CLEAR LS_OBJEK .
      ENDLOOP.
    ENDIF.
*&--代码添加 BY HANDYBY 26.04.2017 11:37:45  END

*&--代码注释 BY HANDYBY 26.04.2017 11:43:39  BEGIN
*    LOOP AT IT_CHAR.
*      CASE IT_CHAR-CHARACT.
*        WHEN 'GGXH'.
*          IT_JBST-GGXH = IT_CHAR-VALUE_CHAR.
*        WHEN 'XSJJ'.
*          IT_JBST-XSJJ = IT_CHAR-VALUE_CHAR.
*        WHEN 'ROHS'.
*          IT_JBST-ROHS = IT_CHAR-VALUE_CHAR.
*        WHEN 'SFYGD'.
*          IT_JBST-SFYGD = IT_CHAR-VALUE_CHAR.
*        WHEN 'SFYGD'.
*          IT_JBST-SFYGD = IT_CHAR-VALUE_CHAR.
*        WHEN 'CHANGJIA'.
*          IT_JBST-CHANGJIA = IT_CHAR-VALUE_CHAR.
*        WHEN  'DHH'.
*          CLEAR :DHH1 ,DHH2.
*          " IT_JBST-DHH = IT_CHAR-VALUE_CHAR.
*          SEARCH IT_CHAR-VALUE_CHAR FOR '、'.
*          IF SY-SUBRC EQ 0 .
*            SPLIT IT_CHAR-VALUE_CHAR AT '、' INTO DHH1 DHH2.
*            CONCATENATE IT_JBST-DHH DHH2 INTO IT_JBST-DHH. "MODIFY by IT02 订货号多行订单行拼接显示在一行 。150916
*          ELSE.
*            CONCATENATE IT_JBST-DHH IT_CHAR-VALUE_CHAR INTO IT_JBST-DHH .
*          ENDIF.
*        WHEN 'CPLX'.
*          IT_JBST-CPLX = IT_CHAR-VALUE_CHAR.
*        WHEN 'TEZZ'.
*          "IT_JBST-TEZZ = IT_CHAR-VALUE_CHAR.
*          CONCATENATE IT_JBST-TEZZ  IT_CHAR-VALUE_CHAR INTO IT_JBST-TEZZ. "MODIFY by IT02 特征值多行订单行拼接显示在一行 。150916
*        WHEN 'SHENQINGREN'.
*          IT_JBST-SHENQINGREN = IT_CHAR-VALUE_CHAR.
*        WHEN 'SKWJ'.
*          IT_JBST-SKWJ = IT_CHAR-VALUE_CHAR .
*      ENDCASE.
*    ENDLOOP.
*&--代码注释 BY HANDYBY 26.04.2017 11:43:39  END

*&--代码添加 BY HANDYBY 26.04.2017 11:43:53  BEGIN
    LOOP AT LT_ATNAM INTO LS_ATNAM .
      CASE LS_ATNAM-ATNAM.
        WHEN 'GGXH'.
          IT_JBST-GGXH = LS_ATNAM-ATWRT.
        WHEN 'XSJJ'.
          IT_JBST-XSJJ = LS_ATNAM-ATWRT.
        WHEN 'ROHS'.
          IT_JBST-ROHS = LS_ATNAM-ATWRT.
        WHEN 'SFYGD'.
          IT_JBST-SFYGD = LS_ATNAM-ATWRT.
        WHEN 'SFYGD'.
          IT_JBST-SFYGD = LS_ATNAM-ATWRT.
        WHEN 'CHANGJIA'.
          IT_JBST-CHANGJIA = LS_ATNAM-ATWRT.
        WHEN  'DHH'.
          CLEAR :DHH1 ,DHH2.
          " IT_JBST-DHH = IT_CHAR-VALUE_CHAR.
          SEARCH LS_ATNAM-ATWRT FOR '、'.
          IF SY-SUBRC EQ 0 .
            SPLIT LS_ATNAM-ATWRT AT '、' INTO DHH1 DHH2.
            CONCATENATE IT_JBST-DHH DHH2 INTO IT_JBST-DHH. "MODIFY by IT02 订货号多行订单行拼接显示在一行 。150916
          ELSE.
            CONCATENATE IT_JBST-DHH LS_ATNAM-ATWRT INTO IT_JBST-DHH .
          ENDIF.
        WHEN 'CPLX'.
          IT_JBST-CPLX = LS_ATNAM-ATWRT.
        WHEN 'TEZZ'.
          "IT_JBST-TEZZ = IT_CHAR-VALUE_CHAR.
          CONCATENATE IT_JBST-TEZZ  LS_ATNAM-ATWRT INTO IT_JBST-TEZZ. "MODIFY by IT02 特征值多行订单行拼接显示在一行 。150916
        WHEN 'SHENQINGREN'.
          IT_JBST-SHENQINGREN = LS_ATNAM-ATWRT.
        WHEN 'SKWJ'.
          IT_JBST-SKWJ = LS_ATNAM-ATWRT .
      ENDCASE.
    ENDLOOP.
*&--代码添加 BY HANDYBY 26.04.2017 11:43:53  END


*&--代码注释 BY HANDYBY 25.04.2017 17:41:41  BEGIN
*  READ TABLE lt_makt_en WITH KEY matnr = it_jbst-matnr.
*&--代码注释 BY HANDYBY 25.04.2017 17:41:41  END
*&--代码添加 BY HANDYBY 25.04.2017 17:41:45  BEGIN
    READ TABLE LT_MAKT_EN WITH KEY MATNR = IT_JBST-MATNR BINARY SEARCH .
*&--代码添加 BY HANDYBY 25.04.2017 17:41:45  END
    IF SY-SUBRC = 0.
      IT_JBST-MAKTX_EN = LT_MAKT_EN-MAKTX.
      MODIFY IT_JBST.
    ENDIF.

*&--代码注释 BY HANDYBY 25.04.2017 17:41:41  BEGIN
*  READ TABLE lt_makt_z1 WITH KEY matnr = it_jbst-matnr .
*&--代码注释 BY HANDYBY 25.04.2017 17:41:41  END
*&--代码添加 BY HANDYBY 25.04.2017 17:41:45  BEGIN
    READ TABLE LT_MAKT_Z1 WITH KEY MATNR = IT_JBST-MATNR BINARY SEARCH .
*&--代码添加 BY HANDYBY 25.04.2017 17:41:45  END
    IF SY-SUBRC = 0.
      IT_JBST-MAKTX_Z1 = LT_MAKT_Z1-MAKTX.
      MODIFY IT_JBST.
    ENDIF.

*&--代码注释 BY HANDYBY 25.04.2017 17:41:41  BEGIN
*  READ TABLE it_mard WITH KEY matnr = it_jbst-matnr .
*&--代码注释 BY HANDYBY 25.04.2017 17:41:41  END
*&--代码添加 BY HANDYBY 25.04.2017 17:41:45  BEGIN
    READ TABLE IT_MARD WITH KEY MATNR = IT_JBST-MATNR BINARY SEARCH .
*&--代码添加 BY HANDYBY 25.04.2017 17:41:45  END
    IF SY-SUBRC = 0.
      IT_JBST-LGORT = IT_MARD-LGORT.
      MODIFY IT_JBST.
    ENDIF.

*&--代码注释 BY HANDYBY 25.04.2017 17:41:41  BEGIN
*  READ TABLE lt_prdkzt WITH KEY iprkz = it_jbst-iprkz .
*&--代码注释 BY HANDYBY 25.04.2017 17:41:41  END
*&--代码添加 BY HANDYBY 25.04.2017 17:41:45  BEGIN
    READ TABLE LT_PRDKZT WITH KEY IPRKZ = IT_JBST-IPRKZ BINARY SEARCH .
*&--代码添加 BY HANDYBY 25.04.2017 17:41:45  END
    IF SY-SUBRC = 0.
      IT_JBST-EPRKZ = LT_PRDKZT-EPRKZ.
      MODIFY IT_JBST.
    ENDIF.

    " 取得长文本
    DATA:GS_LINES TYPE STRING.
    DATA:GT_TEXT TYPE STANDARD TABLE OF TLINE,
         GS_TEXT TYPE                   TLINE.
    DATA: LV_NAME LIKE THEAD-TDNAME. "Name.
    DATA: OBJECT TYPE C LENGTH 10.

    CLEAR:GT_TEXT,GS_TEXT,GS_LINES.

    LV_NAME = IT_JBST-MATNR.

    OBJECT = 'MATERIAL'.

    CALL FUNCTION 'READ_TEXT'
      EXPORTING
        ID                      = 'GRUN'
        LANGUAGE                = SY-LANGU
        NAME                    = LV_NAME
        OBJECT                  = OBJECT
      TABLES
        LINES                   = GT_TEXT
      EXCEPTIONS
        ID                      = 1
        LANGUAGE                = 2
        NAME                    = 3
        NOT_FOUND               = 4
        OBJECT                  = 5
        REFERENCE_CHECK         = 6
        WRONG_ACCESS_TO_ARCHIVE = 7
        OTHERS                  = 8.
    IF SY-SUBRC = 0.
      LOOP AT GT_TEXT INTO GS_TEXT.
*        gs_lines = gs_text-tdline.
        CONCATENATE GS_LINES '' GS_TEXT-TDLINE     INTO GS_LINES.
      ENDLOOP.
    ENDIF.

    IT_JBST-LONG_TEXT = GS_LINES. " 长文本

*采购订单文本
    DATA:LINES LIKE STANDARD TABLE OF TLINE WITH HEADER LINE.
    DATA:L_TDLINE TYPE TLINE-TDLINE.
    DATA:NAME LIKE THEAD-TDNAME.
    NAME = IT_JBST-MATNR.

    CALL FUNCTION 'READ_TEXT'
      EXPORTING
*       CLIENT                  = SY-MANDT
        ID                      = 'BEST'
        LANGUAGE                = SY-LANGU
        NAME                    = NAME
        OBJECT                  = 'MATERIAL'
      TABLES
        LINES                   = LINES
      EXCEPTIONS
        ID                      = 1
        LANGUAGE                = 2
        NAME                    = 3
        NOT_FOUND               = 4
        OBJECT                  = 5
        REFERENCE_CHECK         = 6
        WRONG_ACCESS_TO_ARCHIVE = 7
        OTHERS                  = 8.

    IF SY-SUBRC = 0.
      LOOP AT LINES. " 前台输入分行对于这里多条数据
        L_TDLINE = LINES-TDLINE.
        CONCATENATE L_TDLINE IT_JBST-CGWB INTO IT_JBST-CGWB. " 更新采购订单文本
      ENDLOOP.
    ENDIF.

    CALL FUNCTION 'CONVERSION_EXIT_CUNIT_OUTPUT'
      EXPORTING
        INPUT          = IT_JBST-MEINS
*       LANGUAGE       = SY-LANGU
      IMPORTING
*       LONG_TEXT      =
        OUTPUT         = IT_JBST-MEINS
*       SHORT_TEXT     =
      EXCEPTIONS
        UNIT_NOT_FOUND = 1
        OTHERS         = 2.
    MODIFY IT_JBST.
  ENDLOOP.

ENDFORM.

FORM FRM_DATA02.
  CLEAR: IT_MAKT,IT_MAKT[].

  SELECT A~BISMT
  A~MATNR A~MTART A~MBRSH A~MEINS A~MATKL A~SPART A~ERSDA B~WERKS B~MAABC
  B~DISPO B~DISLS B~MINBE B~BSTFE B~BSTMI B~BSTRF B~BSTMA B~BESKZ B~SOBSL B~LGPRO
  B~LGFSB B~SCHGT B~DZEIT B~PLIFZ B~FHORI B~EISBE B~STRGR B~MTVFP B~SBDKZ B~KZAUS
  B~AUSDT B~NFMAT B~FEVOR B~DISMM
  B~DISGR
  B~RGEKZ
  B~KAUSF
  B~BEARZ
  B~BASMG
  B~SFCPF
  B~WEBAZ
  B~AUSSS
*ADD BY HANDWY 2015,3,5
  B~MABST
  B~VRMOD
  B~VINT1
  B~VINT2
  B~RUEZT
  B~LVORM
*&--代码添加 BY HANDYBY 27.07.2017 09:26:23  BEGIN
    A~EXTWG
*&--代码添加 BY HANDYBY 27.07.2017 09:26:23  END
  INTO CORRESPONDING FIELDS OF TABLE IT_GCST
  FROM MARA AS A
  INNER JOIN MARC AS B ON A~MATNR = B~MATNR
  WHERE A~MATNR IN S_MATNR2
  AND A~MTART IN S_MTART2
  AND A~ERSDA IN S_ERSDA2
  AND MATKL   IN S_MATKL2
  AND EXTWG   IN S_EXTWG2
  AND LAEDA   IN S_LAEDA2
  AND B~WERKS IN S_WERKS2
  AND B~BESKZ IN S_BESKZ2
  AND A~BISMT IN S_BISMT2
  AND B~DISPO IN S_DISPO.



  IF IT_GCST[] IS NOT INITIAL.
    SELECT MATNR MAKTX
    FROM MAKT
    INTO CORRESPONDING FIELDS OF TABLE IT_MAKT
    FOR ALL ENTRIES IN IT_GCST
    WHERE MATNR = IT_GCST-MATNR
    AND   SPRAS = SY-LANGU..
  ENDIF.

  LOOP AT IT_GCST.
    READ TABLE IT_MAKT WITH KEY MATNR = IT_GCST-MATNR.
    IF SY-SUBRC = 0.
      IT_GCST-MAKTX = IT_MAKT-MAKTX.
    ENDIF.

    CALL FUNCTION 'CONVERSION_EXIT_CUNIT_OUTPUT'
      EXPORTING
        INPUT          = IT_GCST-MEINS
*       LANGUAGE       = SY-LANGU
      IMPORTING
*       LONG_TEXT      =
        OUTPUT         = IT_GCST-MEINS
*       SHORT_TEXT     =
      EXCEPTIONS
        UNIT_NOT_FOUND = 1
        OTHERS         = 2.
    MODIFY IT_GCST.
  ENDLOOP.
ENDFORM.

FORM FRM_DATA03.
  CLEAR: IT_MAKT,IT_MAKT[],IT_MLAN,IT_MLAN[],IT_MARC,IT_MARC[].

  SELECT A~BISMT
*    ZJWLH
    A~MATNR A~MTART A~MBRSH A~TRAGR A~ERSDA A~ERSDA B~VKORG B~VTWEG B~DWERK
    B~MTPOS B~KTGRM
    B~MVGR1
    B~MVGR2
    B~MVGR3
    B~MVGR4
    B~MVGR5
    B~LVORM
  FROM MARA AS A INNER JOIN MVKE AS B ON A~MATNR = B~MATNR
  INTO CORRESPONDING FIELDS OF TABLE IT_XSST
  WHERE A~MATNR IN S_MATNR3
  AND A~MTART IN S_MTART3
  AND MATKL IN S_MATKL3
  AND EXTWG IN S_EXTWG3
  AND LAEDA IN S_LAEDA3
  AND A~ERSDA IN S_ERSDA3
  AND B~VKORG IN S_VKORG
  AND A~BISMT IN S_BISMT3
  AND B~VTWEG IN S_VTWGE.

  IF IT_XSST[] IS NOT INITIAL.
    SELECT MAKTX MATNR
    FROM MAKT
    INTO CORRESPONDING FIELDS OF TABLE IT_MAKT
    FOR ALL ENTRIES IN IT_XSST
    WHERE MATNR = IT_XSST-MATNR
    AND  SPRAS = SY-LANGU..

    SELECT MTVFP LADGR MATNR
    FROM MARC
    INTO CORRESPONDING FIELDS OF TABLE IT_MARC
    FOR ALL ENTRIES IN IT_XSST
    WHERE MATNR = IT_XSST-MATNR
    AND WERKS = IT_XSST-DWERK.

    SELECT TAXM1 MATNR
    FROM MLAN
    INTO CORRESPONDING FIELDS OF TABLE IT_MLAN
    FOR ALL ENTRIES IN IT_XSST
    WHERE MATNR = IT_XSST-MATNR.
  ENDIF.
  LOOP AT IT_XSST.
    READ TABLE IT_MAKT WITH KEY MATNR = IT_XSST-MATNR.
    IF SY-SUBRC = 0.
      IT_XSST-MAKTX = IT_MAKT-MAKTX.
      MODIFY IT_XSST.
    ENDIF.

    READ TABLE IT_MARC WITH KEY MATNR = IT_XSST-MATNR.
    IF SY-SUBRC = 0.
      IT_XSST-MTVFP = IT_MARC-MTVFP.
      IT_XSST-LADGR = IT_MARC-LADGR.
      MODIFY IT_XSST.
    ENDIF.

    READ TABLE IT_MLAN WITH KEY MATNR = IT_XSST-MATNR.
    IF SY-SUBRC = 0.
      IT_XSST-TAXM1 = IT_MLAN-TAXM1.
      MODIFY IT_XSST.
    ENDIF.
  ENDLOOP.
ENDFORM.

FORM FRM_DATA04.
  CLEAR:IT_MAKT,IT_MAKT[].

  SELECT A~BISMT
    A~MATNR A~MTART A~MBRSH A~ERSDA B~EKGRP B~XCHPF B~KORDB
    B~WERKS B~LVORM
  FROM MARA AS A INNER JOIN MARC AS B ON A~MATNR = B~MATNR
  INTO CORRESPONDING FIELDS OF TABLE IT_CGST
  WHERE A~MATNR IN S_MATNR4
    AND A~MTART IN S_MTART4
    AND MATKL IN S_MATKL4
    AND EXTWG IN S_EXTWG4
    AND LAEDA IN S_LAEDA4
    AND A~ERSDA IN S_ERSDA4
    AND B~WERKS IN S_WERKS4
    AND A~BISMT IN S_BISMT4
    AND B~EKGRP IN S_EKGRP.

  IF IT_CGST[] IS NOT INITIAL.
    SELECT MATNR MAKTX
    FROM MAKT
    INTO CORRESPONDING FIELDS OF TABLE IT_MAKT
    FOR ALL ENTRIES IN IT_CGST
    WHERE MATNR = IT_CGST-MATNR
    AND SPRAS = SY-LANGU.  .
  ENDIF.

  LOOP AT IT_CGST.
    READ TABLE IT_MAKT WITH KEY MATNR = IT_CGST-MATNR.
    IF SY-SUBRC = 0.
      IT_CGST-MAKTX = IT_MAKT-MAKTX.
    ENDIF.
    MODIFY IT_CGST.
  ENDLOOP.

  LOOP AT IT_CGST.
    DATA:LINES LIKE STANDARD TABLE OF TLINE WITH HEADER LINE.
    DATA:L_TDLINE TYPE TLINE-TDLINE.
    DATA:NAME LIKE THEAD-TDNAME.
    NAME = IT_CGST-MATNR.

    CALL FUNCTION 'READ_TEXT'
      EXPORTING
*       CLIENT                  = SY-MANDT
        ID                      = 'BEST'
        LANGUAGE                = SY-LANGU
        NAME                    = NAME
        OBJECT                  = 'MATERIAL'
      TABLES
        LINES                   = LINES
      EXCEPTIONS
        ID                      = 1
        LANGUAGE                = 2
        NAME                    = 3
        NOT_FOUND               = 4
        OBJECT                  = 5
        REFERENCE_CHECK         = 6
        WRONG_ACCESS_TO_ARCHIVE = 7
        OTHERS                  = 8.

    IF SY-SUBRC = 0.
      LOOP AT LINES. " 前台输入分行对于这里多条数据
        L_TDLINE = LINES-TDLINE.
        CONCATENATE L_TDLINE IT_CGST-CGWB INTO IT_CGST-CGWB. " 更新采购订单文本
      ENDLOOP.
    ENDIF.
    MODIFY IT_CGST.
  ENDLOOP.

ENDFORM.

FORM FRM_DATA05.
  CLEAR: IT_MAKT,IT_MAKT[].

  SELECT A~BISMT
*    ZJWLH
    A~MATNR A~MTART A~MBRSH A~MHDRZ A~MHDHB A~LVORM A~ERSDA B~WERKS
*    c~lgort
  B~LOGGR " 后勤处理组
  B~LVORM
  FROM MARA AS A
  INNER JOIN MARC AS B ON A~MATNR = B~MATNR
*  INNER JOIN mard AS c ON a~matnr = c~matnr AND b~werks = c~werks
  INTO CORRESPONDING FIELDS OF TABLE IT_KCST
  WHERE A~MATNR IN S_MATNR5
    AND A~MTART IN S_MTART5
    AND A~ERSDA IN S_ERSDA5
*   AND a~bismt IN s_bismt5
*    AND ZJWLH IN S_ZJWLH5 " 旧物料号
    AND MATKL IN S_MATKL5
    AND EXTWG IN S_EXTWG5
    AND LAEDA IN S_LAEDA5
    AND A~BISMT IN S_BISMT5
    AND A~LVORM IN S_LVORM
    AND B~WERKS IN S_WERKS5.
*    AND c~lgort IN s_lgort.

  DATA: IT1_MARD TYPE STANDARD TABLE OF MARD WITH HEADER LINE.
  CLEAR:IT1_MARD,IT1_MARD[].

  IF IT_KCST[] IS NOT INITIAL.
    SELECT MATNR MAKTX
    FROM MAKT
    INTO CORRESPONDING FIELDS OF TABLE IT_MAKT
    FOR ALL ENTRIES IN IT_KCST
    WHERE MATNR = IT_KCST-MATNR
      AND SPRAS = SY-LANGU.

    SELECT MATNR
      WERKS
      LGORT
      FROM MARD
      INTO CORRESPONDING FIELDS OF TABLE IT1_MARD
      FOR ALL ENTRIES IN IT_KCST
      WHERE MATNR =   IT_KCST-MATNR
      AND WERKS = IT_KCST-WERKS.

  ENDIF.

  LOOP AT IT_KCST.
    READ TABLE IT1_MARD WITH KEY  MATNR =   IT_KCST-MATNR
                                  WERKS = IT_KCST-WERKS.
    IF SY-SUBRC = 0.
      IT_KCST-LGORT = IT1_MARD-LGORT. " 库存地点
    ENDIF.


    READ TABLE IT_MAKT WITH KEY MATNR = IT_KCST-MATNR.
    IF SY-SUBRC = 0.
      IT_KCST-MAKTX = IT_MAKT-MAKTX.

    ENDIF.
    MODIFY IT_KCST.
  ENDLOOP.


ENDFORM.

FORM FRM_DATA06.
  CLEAR:IT_MAKT,IT_MAKT[].

  SELECT A~BISMT
         A~MATNR
         A~MTART
         A~MBRSH
         A~ERSDA
         B~BKLAS
         B~VPRSV
         B~VERPR
         B~STPRS
         B~PEINH
         B~HKMAT
         B~ZPLP1
         B~ZPLD1
         C~WERKS
         C~BESKZ
         C~MMSTA
         C~LOSGR
         B~MLAST   "价格确定
         B~BWKEY   "评估范围
         B~HRKFT   "原始组
         B~ZPLP2   "计划价格2
         B~ZPLD2   "计划价格2日期
         B~VERPR   "移动平均价
         B~STPRS   "标准价
         B~LVORM
  FROM MBEW AS B
  INNER JOIN MARA AS A ON A~MATNR = B~MATNR
    INNER JOIN MARC AS C ON B~MATNR = C~MATNR
    AND B~BWKEY = C~WERKS
  INTO CORRESPONDING FIELDS OF TABLE IT_CWST
  WHERE A~MATNR IN S_MATNR6
    AND A~MTART IN S_MTART6
    AND MATKL   IN S_MATKL6
    AND EXTWG   IN S_EXTWG6
    AND LAEDA   IN S_LAEDA6
    AND A~ERSDA IN S_ERSDA6
    AND B~VPRSV IN S_VPRSV
    AND BWKEY   IN S_WERKS6
    AND A~BISMT IN S_BISMT6
    AND C~BESKZ IN S_BESKZ6.

  IF IT_CWST[] IS NOT INITIAL.
    SELECT MATNR MAKTX
    FROM MAKT
    INTO CORRESPONDING FIELDS OF TABLE IT_MAKT
    FOR ALL ENTRIES IN IT_CWST
    WHERE MATNR = IT_CWST-MATNR
    AND  SPRAS = SY-LANGU.
    .
  ENDIF.

  LOOP AT IT_CWST.
    READ TABLE IT_MAKT WITH KEY MATNR = IT_CWST-MATNR.
    IF SY-SUBRC = 0.
      IT_CWST-MAKTX = IT_MAKT-MAKTX.
      MODIFY IT_CWST.
    ENDIF.
  ENDLOOP.
ENDFORM.

FORM FRM_DATA07.
  CLEAR: IT_MARD,IT_MARD[],IT_MLAN,IT_MLAN[],
         IT_MAKT,IT_MAKT[],IT_MVKE,IT_MVKE[],
         IT_MBEW,IT_MBEW[],IT_MVGD,IT_MVGD[].

  SELECT A~BISMT
         A~MATNR A~MBRSH A~MTART A~MEINS A~MATKL A~SPART A~FERTH A~NORMT A~ZEINR
         A~AESZN A~TRAGR A~MHDRZ A~MHDHB A~ERSDA
         B~WERKS B~MTVFP B~LADGR B~EKGRP B~XCHPF B~KORDB B~MAABC B~DISMM B~DISPO B~DISLS
         B~MINBE B~BSTFE B~BSTMI B~BSTRF B~BESKZ B~SOBSL B~LGPRO B~LGFSB B~DZEIT B~PLIFZ
         B~FHORI B~EISBE B~STRGR B~SBDKZ B~KZAUS B~AUSDT B~NFMAT B~FEVOR B~SFCPF B~NCOST
         B~MMSTA B~LOSGR
         B~DISGR
         B~RGEKZ
         B~KAUSF
         B~BEARZ
         B~BASMG
         B~WEBAZ
         B~AUSSS
*ADD BY HANDWY 2015,3,5
         B~MABST
         B~VRMOD
         B~VINT1
         B~VINT2
         B~RUEZT
  FROM MARA AS A INNER JOIN MARC AS B ON A~MATNR = B~MATNR
  INTO CORRESPONDING FIELDS OF TABLE IT_HZST
  WHERE A~MATNR IN S_MATNR7
    AND A~MTART IN S_MTART7
    AND MATKL   IN S_MATKL7
    AND EXTWG   IN S_EXTWG7
    AND LAEDA   IN S_LAEDA7
    AND A~ERSDA IN S_ERSDA7
    AND B~WERKS IN S_WERKS7
    AND A~BISMT IN S_BISMT7.

  IF IT_HZST[] IS NOT INITIAL.
    SELECT MATNR BKLAS VPRSV PEINH EKALR HKMAT ZPLP1 ZPLD1
      MLAST " 价格确定
      BWKEY
      VERPR
      STPRS
    FROM MBEW
    INTO CORRESPONDING FIELDS OF TABLE IT_MBEW
    FOR ALL ENTRIES IN IT_HZST
    WHERE MATNR = IT_HZST-MATNR
    AND MBEW~BWKEY = IT_HZST-WERKS.

    SELECT MATNR VKORG VTWEG DWERK MTPOS
     MVGR1 MVGR2 MVGR3 MVGR4 MVGR5
    FROM MVKE
    INTO CORRESPONDING FIELDS OF TABLE IT_MVKE
    FOR ALL ENTRIES IN IT_HZST
    WHERE MATNR = IT_HZST-MATNR.

    SELECT MATNR TAXM1
    FROM MLAN
    INTO CORRESPONDING FIELDS OF TABLE IT_MLAN
    FOR ALL ENTRIES IN IT_HZST
    WHERE MATNR = IT_HZST-MATNR.

    SELECT MATNR MAKTX
    FROM MAKT
    INTO CORRESPONDING FIELDS OF TABLE IT_MAKT
    FOR ALL ENTRIES IN IT_HZST
    WHERE MATNR = IT_HZST-MATNR
    AND  SPRAS = SY-LANGU   .

    SELECT MATNR LGORT
    FROM MARD
    INTO CORRESPONDING FIELDS OF TABLE IT_MARD
    FOR ALL ENTRIES IN IT_HZST
    WHERE MATNR = IT_HZST-MATNR.

    SELECT MATNR PRGRP PRWRK
    FROM MVGD
    INTO CORRESPONDING FIELDS OF TABLE IT_MVGD
    FOR ALL ENTRIES IN IT_HZST
    WHERE MATNR = IT_HZST-MATNR.
  ENDIF.

  LOOP AT IT_HZST.
    READ TABLE IT_MBEW WITH KEY MATNR = IT_HZST-MATNR
                                BWKEY = IT_HZST-WERKS.
    IF SY-SUBRC = 0.
      IT_HZST-BKLAS = IT_MBEW-BKLAS.
      IT_HZST-VPRSV = IT_MBEW-VPRSV.
      IT_HZST-PEINH = IT_MBEW-PEINH.
      IT_HZST-EKALR = IT_MBEW-EKALR.
      IT_HZST-HKMAT = IT_MBEW-HKMAT.
      IT_HZST-ZPLP1 = IT_MBEW-ZPLP1.
      IT_HZST-ZPLD1 = IT_MBEW-ZPLD1.
      IT_HZST-MLAST = IT_MBEW-MLAST. " 价格确定
      MODIFY IT_HZST.
    ENDIF.

    READ TABLE IT_MVKE WITH KEY MATNR = IT_HZST-MATNR.
    IF SY-SUBRC = 0.
      IT_HZST-VKORG = IT_MVKE-VKORG.
      IT_HZST-VTWEG = IT_MVKE-VTWEG.
      IT_HZST-DWERK = IT_MVKE-DWERK.
      IT_HZST-MTPOS = IT_MVKE-MTPOS.
      IT_HZST-MVGR1 = IT_MVKE-MVGR1.
      IT_HZST-MVGR2 = IT_MVKE-MVGR2.
      IT_HZST-MVGR3 = IT_MVKE-MVGR3.
      IT_HZST-MVGR4 = IT_MVKE-MVGR4.
      IT_HZST-MVGR5 = IT_MVKE-MVGR5.
      MODIFY IT_HZST.
    ENDIF.

    READ TABLE IT_MLAN WITH KEY MATNR = IT_HZST-MATNR.
    IF SY-SUBRC = 0.
      IT_HZST-TAXM1 = IT_MLAN-TAXM1.
      MODIFY IT_HZST.
    ENDIF.

    READ TABLE IT_MAKT WITH KEY MATNR = IT_HZST-MATNR.
    IF SY-SUBRC = 0.
      IT_HZST-MAKTX = IT_MAKT-MAKTX.
      MODIFY IT_HZST.
    ENDIF.

    READ TABLE IT_MARD WITH KEY MATNR = IT_HZST-MATNR.
    IF SY-SUBRC = 0.
      IT_HZST-LGORT = IT_MARD-LGORT.
      MODIFY IT_HZST.
    ENDIF.

    READ TABLE IT_MVGD WITH KEY MATNR = IT_HZST-MATNR.
    IF SY-SUBRC = 0.
      IT_HZST-PRGRP = IT_MVGD-PRGRP.
      IT_HZST-PRWRK = IT_MVGD-PRWRK.
      MODIFY IT_HZST.
    ENDIF.
  ENDLOOP.

  LOOP AT IT_HZST.
    DATA:LINES LIKE STANDARD TABLE OF TLINE WITH HEADER LINE.
    DATA:L_TDLINE TYPE TLINE-TDLINE.
    DATA:NAME LIKE THEAD-TDNAME.
    NAME = IT_HZST-MATNR.

    CALL FUNCTION 'READ_TEXT'
      EXPORTING
*       CLIENT                  = SY-MANDT
        ID                      = 'BEST'
        LANGUAGE                = SY-LANGU
        NAME                    = NAME
        OBJECT                  = 'MATERIAL'
      TABLES
        LINES                   = LINES
      EXCEPTIONS
        ID                      = 1
        LANGUAGE                = 2
        NAME                    = 3
        NOT_FOUND               = 4
        OBJECT                  = 5
        REFERENCE_CHECK         = 6
        WRONG_ACCESS_TO_ARCHIVE = 7
        OTHERS                  = 8.

    IF SY-SUBRC = 0.
      LOOP AT LINES. " 前台输入分行对于这里多条数据
        L_TDLINE = LINES-TDLINE.
        CONCATENATE L_TDLINE IT_HZST-CGWB INTO IT_HZST-CGWB. " 更新采购文本
      ENDLOOP.
    ENDIF.

    " 单位转换
    CALL FUNCTION 'CONVERSION_EXIT_CUNIT_OUTPUT'
      EXPORTING
        INPUT          = IT_HZST-MEINS
*       LANGUAGE       = SY-LANGU
      IMPORTING
*       LONG_TEXT      =
        OUTPUT         = IT_HZST-MEINS
*       SHORT_TEXT     =
      EXCEPTIONS
        UNIT_NOT_FOUND = 1
        OTHERS         = 2.

    MODIFY IT_HZST.
  ENDLOOP.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_DATA08
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_DATA08 .

  SELECT
    MARA~MATNR
    MARC~WERKS
    MARC~LVORM
    MARA~MTART
    QMAT~ART
    QMAT~APA
    QMAT~AKTIV
    FROM MARA INNER JOIN MARC
    ON MARA~MATNR = MARC~MATNR
    INNER JOIN QMAT
    ON MARC~MATNR = QMAT~MATNR
    AND MARC~WERKS = QMAT~WERKS
    INTO CORRESPONDING FIELDS OF TABLE IT_ZJST
    WHERE MARA~MATNR IN S_MATNR8
    AND   MARA~MTART IN S_MTART8
    AND   MARC~WERKS IN S_WERKS8
    AND   MARA~BISMT IN S_BISMT8
    AND   ART        IN S_ART.

ENDFORM.                    " FRM_DATA08
*&---------------------------------------------------------------------*
*&      Form  FRM_AUTH_CHECK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_AUTH_CHECK .
*  LOOP AT GT_T001W WHERE WERKS IN S_WERKS.
*    AUTHORITY-CHECK OBJECT 'M_MATE_WRK'
*             ID 'WERKS' FIELD GT_T001W-WERKS
*             .
*    IF SY-SUBRC <> 0.
*      MESSAGE E603(FCO) WITH GT_T001W-WERKS.
*    ENDIF.
*  ENDLOOP.
ENDFORM.
