FUNCTION ZOA_FB01_RFC.
*"----------------------------------------------------------------------
*"*"本地接口：
*"  IMPORTING
*"     VALUE(ZDYXTM) TYPE  CHAR30 OPTIONAL
*"  TABLES
*"      T_ZFIFB01 STRUCTURE  ZFIFB01 OPTIONAL
*"      T_ZFIFB01OUT STRUCTURE  ZFIFB01OUT
*"----------------------------------------------------------------------

*EXPORT T_ZFIFB01[]  TO MEMORY ID 'ZFIFB01'.
*SUBMIT ZFI029W WITH P_MODE = 'N' AND RETURN.
*IMPORT T_ZFIFB01OUT[] FROM  MEMORY ID 'ZFIFB01OUT'.
 TYPES: BEGIN OF TY_TBSL,
         BSCHL TYPE TBSL-BSCHL,
         SHKZG TYPE TBSL-SHKZG,
       END OF TY_TBSL.
 "* DATA
*--------------------------------------------------------------------*


DATA: GT_INPUT TYPE STANDARD TABLE OF ZFIFB01.
DATA: GW_INPUT TYPE ZFIFB01.
FIELD-SYMBOLS: <GS_INPUT> TYPE ZFIFB01.

  DATA: I_GROUP  TYPE APQI-GROUPID,
        E_MSGID  TYPE SY-MSGID,
        E_MSGNO  TYPE SY-MSGNO,
        E_MSGTY  TYPE SY-MSGTY,
        E_MSGV1  TYPE SY-MSGV1,
        E_MSGV2  TYPE SY-MSGV2,
        E_MSGV3  TYPE SY-MSGV3,
        E_MSGV4  TYPE SY-MSGV4,
        E_SUBRC  TYPE SY-SUBRC,
        T_BLNTAB TYPE STANDARD TABLE OF BLNTAB,
        T_FTPOST TYPE STANDARD TABLE OF FTPOST,
        T_FTTAX  TYPE STANDARD TABLE OF FTTAX.

  DATA: LV_POSNR  TYPE NUMC10,
        LV_POSNRT TYPE CHAR10.

  DATA: LS_FTPOST TYPE FTPOST.

  DATA: LS_OUTPUT TYPE ZFIFB01OUT.

  DEFINE  FILL_FTPOST.
    CLEAR LS_FTPOST.
    LS_FTPOST-STYPE = &1.
    LS_FTPOST-COUNT = &2.
    LS_FTPOST-FNAM  = &3.
    LS_FTPOST-FVAL  = &4.
    APPEND LS_FTPOST TO T_FTPOST.
  END-OF-DEFINITION.


*记账码对应的正负

DATA: GT_TBSL TYPE STANDARD TABLE OF TY_TBSL.
FIELD-SYMBOLS: <GS_TBSL> TYPE TY_TBSL.

DATA: GT_OUTPUT TYPE STANDARD TABLE OF ZFIFB01OUT.
DATA: GW_OUTPUT TYPE ZFIFB01OUT.

*记录日志数据
DATA GT_ZZACKNOW TYPE TABLE OF ZZACKNOW.
DATA GS_ZZACKNOW TYPE ZZACKNOW.
 REFRESH GT_ZZACKNOW.

 DATA:P_MODE TYPE RFPDO-ALLGAZMD VALUE 'N'.
 FREE: GT_INPUT,
        GT_TBSL,
        GT_OUTPUT.
 CLEAR :T_ZFIFB01OUT ,T_ZFIFB01OUT[].
* 记账码对应的正负
  SELECT  BSCHL
          SHKZG
    INTO TABLE GT_TBSL
    FROM TBSL.

     LOOP AT T_ZFIFB01.
      MOVE-CORRESPONDING T_ZFIFB01 TO GW_INPUT.
      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
      EXPORTING
        INPUT  = GW_INPUT-GL_ACCOUNT
      IMPORTING
        OUTPUT = GW_INPUT-GL_ACCOUNT.

    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
      EXPORTING
        INPUT  = GW_INPUT-CUSTOMER
      IMPORTING
        OUTPUT = GW_INPUT-CUSTOMER.

    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
      EXPORTING
        INPUT  = GW_INPUT-VENDOR_NO
      IMPORTING
        OUTPUT = GW_INPUT-VENDOR_NO.

    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
      EXPORTING
        INPUT  = GW_INPUT-COSTCENTER
      IMPORTING
        OUTPUT = GW_INPUT-COSTCENTER.

    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
      EXPORTING
        INPUT  = GW_INPUT-ORDERID
      IMPORTING
        OUTPUT = GW_INPUT-ORDERID.

    CONDENSE GW_INPUT-EXCH_RATE.
    CONDENSE GW_INPUT-AMT_DOCCUR.
    CONDENSE GW_INPUT-MENGE.
    APPEND GW_INPUT TO GT_INPUT.
    ENDLOOP.

    SORT GT_INPUT BY NUMBER POSNR.

      CLEAR: LV_POSNR,
         LV_POSNRT.

  LOOP AT GT_INPUT ASSIGNING <GS_INPUT>.

    AT NEW NUMBER.
      CLEAR: LS_OUTPUT.
      CLEAR: I_GROUP.
      CLEAR: E_MSGID,
             E_MSGNO,
             E_MSGTY,
             E_MSGV1,
             E_MSGV2,
             E_MSGV3,
             E_MSGV4,
             E_SUBRC.
      FREE: T_BLNTAB,
            T_FTPOST,
            T_FTTAX.

      FILL_FTPOST 'K' '0001' 'BKPF-BUKRS' <GS_INPUT>-COMP_CODE.          " 公司代码
      FILL_FTPOST 'K' '0001' 'BKPF-BLDAT' <GS_INPUT>-DOC_DATE.           " 凭证日期
      FILL_FTPOST 'K' '0001' 'BKPF-BUDAT' <GS_INPUT>-PSTNG_DATE.         " 过账日期
      FILL_FTPOST 'K' '0001' 'BKPF-MONAT' <GS_INPUT>-PSTNG_DATE+4(2).    " 期间
      FILL_FTPOST 'K' '0001' 'BKPF-BLART' <GS_INPUT>-DOC_TYPE.           " 凭证类型
      FILL_FTPOST 'K' '0001' 'BKPF-XBLNR' <GS_INPUT>-REF_DOC_NO.         " 参考凭证号
      FILL_FTPOST 'K' '0001' 'BKPF-BKTXT' <GS_INPUT>-HEADER_TXT.         " 凭证抬头文本
      FILL_FTPOST 'K' '0001' 'BKPF-BRNCH' <GS_INPUT>-BRNCH.              " 分支号
      FILL_FTPOST 'K' '0001' 'BKPF-NUMPG' <GS_INPUT>-NUMPG.              " 页数
      FILL_FTPOST 'K' '0001' 'BKPF-WAERS' <GS_INPUT>-CURRENCY.           " 货币码
      FILL_FTPOST 'K' '0001' 'BKPF-KURSF' <GS_INPUT>-EXCH_RATE.          " 汇率
*      IF ZTCODE IS NOT INITIAL .
*      FILL_FTPOST 'K' '0001' 'BKPF-TCODE' ZTCODE.              " 事物码
*      ENDIF.
      "存储自建表的公司代码
       GS_ZZACKNOW-ZBUKRS   = <GS_INPUT>-COMP_CODE.    "公司代码
    ENDAT.

    FILL_FTPOST 'P' <GS_INPUT>-POSNR 'BSEG-BSCHL' <GS_INPUT>-BSCHL.       " 记账码
    FILL_FTPOST 'P' <GS_INPUT>-POSNR 'BSEG-UMSKZ' <GS_INPUT>-UMSKZ.       " 特别总账标识
    "IT02 250609 begin
*    IF <GS_INPUT>-CUSTOMER IS NOT INITIAL.
*      FILL_FTPOST 'P' <GS_INPUT>-POSNR 'BSEG-KUNNR' <GS_INPUT>-CUSTOMER.  " 客户编号
*    ELSEIF <GS_INPUT>-VENDOR_NO IS NOT INITIAL.
*      FILL_FTPOST 'P' <GS_INPUT>-POSNR 'BSEG-LIFNR' <GS_INPUT>-VENDOR_NO. " 科目代码
*    ELSE.
*      FILL_FTPOST 'P' <GS_INPUT>-POSNR 'BSEG-HKONT' <GS_INPUT>-GL_ACCOUNT." 科目代码
*    ENDIF.
    "it02150609 end
    IF <GS_INPUT>-CUSTOMER IS NOT INITIAL.
      FILL_FTPOST 'P' <GS_INPUT>-POSNR 'BSEG-KUNNR' <GS_INPUT>-CUSTOMER.  " 客户编号
    ELSEIF <GS_INPUT>-VENDOR_NO IS NOT INITIAL.
      FILL_FTPOST 'P' <GS_INPUT>-POSNR 'BSEG-LIFNR' <GS_INPUT>-VENDOR_NO. " 科目代码
    ENDIF.
    IF <GS_INPUT>-GL_ACCOUNT NE ''.
      FILL_FTPOST 'P' <GS_INPUT>-POSNR 'BSEG-HKONT' <GS_INPUT>-GL_ACCOUNT." 科目代码
    ENDIF.
    FILL_FTPOST 'P' <GS_INPUT>-POSNR 'BSEG-WRBTR' <GS_INPUT>-AMT_DOCCUR.  " 交易货币金额
    IF <GS_INPUT>-BUS_AREA IS NOT INITIAL.
      "  FILL_FTPOST 'P' <GS_INPUT>-POSNR 'BSEG-GSBER' <GS_INPUT>-BUS_AREA.  " 业务范围
      FILL_FTPOST 'P' <GS_INPUT>-POSNR 'COBL-GSBER' <GS_INPUT>-BUS_AREA.  " 业务范围 LEYARDIT02 150505
    ENDIF.
    IF <GS_INPUT>-VALUE_DATE IS NOT INITIAL.
      FILL_FTPOST 'P' <GS_INPUT>-POSNR 'BSEG-VALUT' <GS_INPUT>-VALUE_DATE. " 起息日
    ENDIF.
    IF <GS_INPUT>-RSTGR IS NOT INITIAL.
      FILL_FTPOST 'P' <GS_INPUT>-POSNR 'BSEG-RSTGR' <GS_INPUT>-RSTGR.      " 原因代码
    ENDIF.
    IF <GS_INPUT>-BLINE_DATE IS NOT INITIAL.
      FILL_FTPOST 'P' <GS_INPUT>-POSNR 'BSEG-ZFBDT' <GS_INPUT>-BLINE_DATE. " 付款基准日期
    ENDIF.
    IF <GS_INPUT>-COSTCENTER IS NOT INITIAL.
      FILL_FTPOST 'P' <GS_INPUT>-POSNR 'COBL-KOSTL' <GS_INPUT>-COSTCENTER." 成本中心
    ENDIF.
    IF <GS_INPUT>-ORDERID IS NOT INITIAL.
      FILL_FTPOST 'P' <GS_INPUT>-POSNR 'COBL-AUFNR' <GS_INPUT>-ORDERID.   " 统计型内部订单
    ENDIF.
    FILL_FTPOST 'P' <GS_INPUT>-POSNR 'BSEG-SGTXT' <GS_INPUT>-ITEM_TEXT.   " 凭证行文本
    IF <GS_INPUT>-WBANK IS NOT INITIAL.
      FILL_FTPOST 'P' <GS_INPUT>-POSNR 'BSED-WBANK' <GS_INPUT>-WBANK.       " 出票者
    ENDIF.
    IF <GS_INPUT>-WLZBP IS NOT INITIAL.
      FILL_FTPOST 'P' <GS_INPUT>-POSNR 'BSED-WLZBP' <GS_INPUT>-WLZBP.       " 票号
    ENDIF.
    IF <GS_INPUT>-ZUONR IS NOT INITIAL.
      FILL_FTPOST 'P' <GS_INPUT>-POSNR 'BSEG-ZUONR' <GS_INPUT>-ZUONR.       " 分配
    ENDIF.
    IF <GS_INPUT>-WDATE IS NOT INITIAL.
      FILL_FTPOST 'P' <GS_INPUT>-POSNR 'BSED-WDATE' <GS_INPUT>-WDATE.       " 签发日期
    ENDIF.
    IF <GS_INPUT>-XREF3 IS NOT INITIAL .
     FILL_FTPOST 'P' <GS_INPUT>-POSNR 'BSEG-XREF3' <GS_INPUT>-XREF3.    " 参考码3
    ENDIF.
*    IF <GS_INPUT>-XREF1 IS NOT INITIAL .
*      FILL_FTPOST 'P' <GS_INPUT>-POSNR 'BSEG-XREF1' <GS_INPUT>-XREF1.       " 参考代码1
*    ENDIF.
*    IF <GS_INPUT>-XREF2 IS NOT INITIAL .
*      FILL_FTPOST 'P' <GS_INPUT>-POSNR 'BSEG-XREF2' <GS_INPUT>-XREF2.       " 参考代码2
*    ENDIF.
    IF <GS_INPUT>-XNEGP IS NOT INITIAL .
      FILL_FTPOST 'P' <GS_INPUT>-POSNR 'BSEG-XNEGP' <GS_INPUT>-XNEGP.       " 反记账
    ENDIF.
*    IF <GS_INPUT>-KKBER IS NOT INITIAL .
*      FILL_FTPOST 'P' <GS_INPUT>-POSNR 'BSEG-KKBER' <GS_INPUT>-KKBER.       " 贷方控制范围
*    ENDIF.
    IF <GS_INPUT>-VBEL2 IS NOT INITIAL .
      FILL_FTPOST 'P' <GS_INPUT>-POSNR 'COBL-KDAUF' <GS_INPUT>-VBEL2.       " 销售订单
    ENDIF.
    IF <GS_INPUT>-POSN2 IS NOT INITIAL .
      FILL_FTPOST 'P' <GS_INPUT>-POSNR 'COBL-KDPOS' <GS_INPUT>-POSN2.       " 销售订单行项目
    ENDIF.
    IF <GS_INPUT>-MATNR IS NOT INITIAL .
      FILL_FTPOST 'P' <GS_INPUT>-POSNR 'COBL-MATNR' <GS_INPUT>-MATNR.       " 物料号
    ENDIF.
    IF <GS_INPUT>-WERKS IS NOT INITIAL .
      FILL_FTPOST 'P' <GS_INPUT>-POSNR 'COBL-WERKS' <GS_INPUT>-WERKS.       " 工厂
    ENDIF.
    IF <GS_INPUT>-MENGE IS NOT INITIAL .
      FILL_FTPOST 'P' <GS_INPUT>-POSNR 'BSEG-MENGE' <GS_INPUT>-MENGE.       " 数量
    ENDIF.
    IF <GS_INPUT>-MEINS IS NOT INITIAL .
      FILL_FTPOST 'P' <GS_INPUT>-POSNR 'BSEG-MEINS' <GS_INPUT>-MEINS.       " 单位
    ENDIF.
    IF <GS_INPUT>-PROJK IS NOT INITIAL .
      FILL_FTPOST 'P' <GS_INPUT>-POSNR 'COBL-PS_POSID' <GS_INPUT>-PROJK.    " WBS元素
    ENDIF.


*    IF <GS_INPUT>-DMBTR IS NOT INITIAL .
*      FILL_FTPOST 'P' <GS_INPUT>-POSNR 'BSEG-DMBTR' <GS_INPUT>-DMBTR.       " 金额
*    ENDIF.
     AT END OF NUMBER.

       CLEAR:GS_ZZACKNOW.

      ADD 1 TO LV_POSNR.
      LV_POSNRT = LV_POSNR.
      CONDENSE LV_POSNRT.
      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
        EXPORTING
          INPUT  = LV_POSNRT
        IMPORTING
          OUTPUT = LV_POSNRT.

      CONCATENATE SY-UZEIT LV_POSNRT <GS_INPUT>-NUMBER INTO I_GROUP.
      CALL FUNCTION 'POSTING_INTERFACE_START'
        EXPORTING
          I_FUNCTION         = 'C'
          I_GROUP            = I_GROUP
          I_KEEP             = 'X'
          I_MODE             = P_MODE
          I_USER             = SY-UNAME
          I_XBDCC            = 'X'
        EXCEPTIONS
          CLIENT_INCORRECT   = 1
          FUNCTION_INVALID   = 2
          GROUP_NAME_MISSING = 3
          MODE_INVALID       = 4
          UPDATE_INVALID     = 5
          OTHERS             = 6.
      IF SY-SUBRC <> 0.
        LS_OUTPUT-NUMBER = <GS_INPUT>-NUMBER.
        MESSAGE ID     SY-MSGID
                TYPE   SY-MSGTY
                NUMBER SY-MSGNO
                WITH   SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4
                INTO   LS_OUTPUT-MSG.
        CONTINUE.
      ENDIF.

      CALL FUNCTION 'POSTING_INTERFACE_DOCUMENT'
        EXPORTING
          I_TCODE                  = 'FB01'
        IMPORTING
          E_MSGID                  = E_MSGID
          E_MSGNO                  = E_MSGNO
          E_MSGTY                  = E_MSGTY
          E_MSGV1                  = E_MSGV1
          E_MSGV2                  = E_MSGV2
          E_MSGV3                  = E_MSGV3
          E_MSGV4                  = E_MSGV4
          E_SUBRC                  = E_SUBRC
        TABLES
          T_BLNTAB                 = T_BLNTAB
          T_FTPOST                 = T_FTPOST
          T_FTTAX                  = T_FTTAX
        EXCEPTIONS
          ACCOUNT_MISSING          = 1
          COMPANY_CODE_MISSING     = 2
          POSTING_KEY_INVALID      = 3
          POSTING_KEY_MISSING      = 4
          RECORD_TYPE_INVALID      = 5
          TRANSACTION_CODE_INVALID = 6
          AMOUNT_FORMAT_ERROR      = 7
          TOO_MANY_LINE_ITEMS      = 8
          COMPANY_CODE_INVALID     = 9
          SCREEN_NOT_FOUND         = 10
          NO_AUTHORIZATION         = 11
          OTHERS                   = 12.
      IF E_MSGID = 'F5' AND E_MSGNO = '312'.
        LS_OUTPUT-BUKRS = E_MSGV2.
        LS_OUTPUT-GJAHR = <GS_INPUT>-PSTNG_DATE+0(4).
        LS_OUTPUT-BELNR = E_MSGV1.
        CALL FUNCTION 'POSTING_INTERFACE_END'.
        COMMIT WORK AND WAIT.
    "    UPDATE BKPF SET BRNCH = <GS_INPUT>-BRNCH NUMPG = <GS_INPUT>-NUMPG WHERE BUKRS = LS_OUTPUT-BUKRS AND GJAHR = LS_OUTPUT-GJAHR AND BELNR = LS_OUTPUT-BELNR.
     ELSE.
      ENDIF.
      LS_OUTPUT-NUMBER = <GS_INPUT>-NUMBER.
      CALL FUNCTION 'MESSAGE_TEXT_BUILD'
        EXPORTING
          MSGID               = E_MSGID
          MSGNR               = E_MSGNO
          MSGV1               = E_MSGV1
          MSGV2               = E_MSGV2
          MSGV3               = E_MSGV3
          MSGV4               = E_MSGV4
        IMPORTING
          MESSAGE_TEXT_OUTPUT = LS_OUTPUT-MSG.
      APPEND LS_OUTPUT TO GT_OUTPUT.
      CLEAR  T_ZFIFB01OUT.
      MOVE-CORRESPONDING LS_OUTPUT  TO T_ZFIFB01OUT.
      APPEND T_ZFIFB01OUT.

       "记录日志数据
         CLEAR GS_ZZACKNOW.
        GS_ZZACKNOW-ZZDYXTM = ZDYXTM.     "调用系统名
        GS_ZZACKNOW-ZZINTTY = 'FIDC'.     "接口类型
        GS_ZZACKNOW-ZZCDATE = SY-DATUM.   "日期
        GS_ZZACKNOW-ZZCTIME = SY-UZEIT.   "时间
        GS_ZZACKNOW-USNAM   =  SY-UNAME .   "用户名
        GS_ZZACKNOW-ZZPROFG = E_MSGTY.    "处理标志
        GS_ZZACKNOW-ZZCOMEN = LS_OUTPUT-MSG ."消息

        APPEND GS_ZZACKNOW TO GT_ZZACKNOW.

    ENDAT.
    ENDLOOP.
    "保存自建表数据
    SORT GT_ZZACKNOW BY ZZDYXTM ZZINTTY  ZBUKRS USNAM ZZCDATE ZZCTIME.
    CHECK GT_ZZACKNOW IS NOT INITIAL.
    MODIFY ZZACKNOW FROM TABLE GT_ZZACKNOW.
ENDFUNCTION.
