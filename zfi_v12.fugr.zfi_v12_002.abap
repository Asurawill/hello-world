FUNCTION ZFI_V12_002.
*"----------------------------------------------------------------------
*"*"本地接口：
*"  IMPORTING
*"     VALUE(BUKRS) TYPE  BUKRS OPTIONAL
*"     VALUE(BUDAT_L) TYPE  DATS DEFAULT 00000000
*"     VALUE(BUDAT_H) TYPE  DATS DEFAULT 99991231
*"  TABLES
*"      T_VBELN STRUCTURE  ZVBELN OPTIONAL
*"      T_ITEM STRUCTURE  ZFI_V12_006 OPTIONAL
*"----------------------------------------------------------------------
  DATA: BEGIN OF T_HEADER OCCURS 0 .
      DATA: BUKRS LIKE BSEG-BUKRS,
            BELNR LIKE BSEG-BELNR,
            GJAHR LIKE BSEG-GJAHR,
            BUZEI LIKE BSEG-BUZEI,
            vbel2 LIKE BSEG-vbel2.
    DATA: END OF T_HEADER.
  DATA : begin of w_bseg ..
   DATA :
    VBELN TYPE VBELN,
    BUDAT LIKE SY-DATUM,
    BUKRS TYPE  BUKRS,
    BELNR TYPE BELNR_D,
    GJAHR TYPE GJAHR,
    BUZEI  TYPE BUZEI,
    HKONT TYPE HKONT,
    BLART TYPE BLART,
    DMBTR_S TYPE DMBTR,
    DMBTR_H TYPE DMBTR,
    WAERS TYPE WAERS,
    WNAME TYPE WNAME,
    WBZOG TYPE WBZOG,
    WBANK TYPE WBANK,
     dmbtr LIKE BSEG-DMBTR,
    VBEL2 LIKE BSEG-VBEL2,
    shkzg LIKE BSEG-shkzg,
     KOSTL TYPE BSEG-KOSTL,"成本中心
     LTEXT TYPE CSKT-LTEXT,"成本中心描述
    XNEGP TYPE BSEG-XNEGP,"反记账
    SGTXT TYPE BSEG-SGTXT."行项目文本

 " INCLUDE type  zfi_v12_006 .
  DATA:END OF W_BSEG.
  DATA GT_BSEG_VBELN TYPE TABLE OF ZFI_BSEG_VBELN WITH HEADER LINE.
  CLEAR: GT_BSEG_VBELN[].
  DATA GT_BSEG LIKE TABLE OF W_BSEG WITH HEADER LINE.
  DATA:GT_CSKT TYPE TABLE OF CSKT WITH HEADER LINE.
  RANGES: R_HKONT_TZ FOR BSEG-HKONT."调整
  CLEAR: T_ITEM[],GT_BSEG[],R_HKONT_TZ[],T_HEADER[].
  R_HKONT_TZ-SIGN = 'I'.
  R_HKONT_TZ-OPTION = 'EQ'.
  R_HKONT_TZ-LOW = '2221030503'.
  APPEND R_HKONT_TZ.
  R_HKONT_TZ-LOW = '1122010301'.
  APPEND R_HKONT_TZ.
  R_HKONT_TZ-LOW = '1122020201'.
  APPEND R_HKONT_TZ.
  R_HKONT_TZ-LOW = '2203010401'.
  APPEND R_HKONT_TZ.
  R_HKONT_TZ-LOW = '2203020201'.
  APPEND R_HKONT_TZ.
  R_HKONT_TZ-LOW = '6001019901'.
  APPEND R_HKONT_TZ.
*    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
*    EXPORTING
*      input  = VBELN
*    IMPORTING
*      output = VBELN.
*  TRANSLATE VBELN  TO UPPER CASE.
  LOOP AT T_VBELN.
    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
      EXPORTING
        INPUT  = T_VBELN-VBELN
      IMPORTING
        OUTPUT = T_VBELN-VBELN.
    TRANSLATE T_VBELN-VBELN  TO UPPER CASE.
    MODIFY T_VBELN.
  ENDLOOP.
  IF BUKRS EQ ''.
*    SELECT BUKRS BELNR GJAHR VBEL2  INTO CORRESPONDING FIELDS OF TABLE T_HEADER FROM BSEG
*      FOR ALL ENTRIES IN T_VBELN WHERE VBEL2 NE SPACE AND VBEL2 EQ T_VBELN-VBELN.
    SELECT BUKRS BELNR GJAHR BUZEI VBEL2  INTO CORRESPONDING FIELDS OF TABLE GT_BSEG_VBELN FROM ZFI_BSEG_VBELN
      FOR ALL ENTRIES IN T_VBELN WHERE VBEL2 EQ T_VBELN-VBELN.
*      SELECT a~bukrs a~belnr b~gjahr b~buzei b~vbel2
*     INTO CORRESPONDING FIELDS OF TABLE GT_BSEG_VBELN
*     FROM  bkpf as a
*     inner join ZFI_BSEG_VBELN as b on
*     a~bukrs = b~bukrs and a~belnr = b~belnr and a~gjahr = b~gjahr
*     FOR ALL ENTRIES IN T_VBELN
*     WHERE  a~BUKRS eq BUKRS
*     and a~budat  BETWEEN BUDAT_L AND BUDAT_H
*     AND b~VBEL2 EQ T_VBELN-VBELN .

  ELSE.
*       SELECT BUKRS BELNR GJAHR VBEL2   INTO CORRESPONDING FIELDS OF TABLE T_HEADER  FROM BSEG
*         FOR ALL ENTRIES IN T_VBELN WHERE VBEL2 NE SPACE AND VBEL2 EQ T_VBELN-VBELN AND BUKRS = BUKRS.
    SELECT BUKRS BELNR GJAHR BUZEI VBEL2   INTO CORRESPONDING FIELDS OF TABLE GT_BSEG_VBELN  FROM ZFI_BSEG_VBELN
      FOR ALL ENTRIES IN T_VBELN WHERE VBEL2 EQ T_VBELN-VBELN AND BUKRS = BUKRS.
*      SELECT a~bukrs a~belnr b~gjahr b~buzei b~vbel2
*     INTO CORRESPONDING FIELDS OF TABLE GT_BSEG_VBELN
*     FROM  bkpf as a
*     inner join ZFI_BSEG_VBELN as b on
*     a~bukrs = b~bukrs and a~belnr = b~belnr and a~gjahr = b~gjahr
*     WHERE  a~BUKRS eq BUKRS
*     and a~budat  BETWEEN BUDAT_L AND BUDAT_H
*    .
  ENDIF.
   sort GT_BSEG_VBELN by bukrs gjahr belnr BUZEI .
  LOOP AT GT_BSEG_VBELN.
    MOVE-CORRESPONDING GT_BSEG_VBELN TO T_HEADER.
    APPEND T_HEADER.
  ENDLOOP.
* DELETE T_HEADER WHERE VBEL2 EQ SPACE.
 SORT T_HEADER BY BUKRS BELNR GJAHR BUZEI.
 IF T_HEADER[] IS NOT INITIAL.
  SELECT  C~BUDAT C~BUKRS C~BELNR C~GJAHR C~BLART C~WAERS B~VBEL2 B~XNEGP  B~SGTXT
     B~BUZEI B~HKONT B~DMBTR B~SHKZG B~KOSTL A~WNAME A~WBZOG A~WBANK FROM BKPF AS C INNER JOIN BSEG AS B
    ON C~BUKRS = B~BUKRS
    AND C~BELNR = B~BELNR
    AND C~GJAHR = B~GJAHR
    LEFT JOIN BSED AS A
    ON B~BUKRS = A~BUKRS
    AND B~BELNR = A~BELNR
    AND B~GJAHR = A~GJAHR
    AND B~BUZEI = A~BUZEI
    INTO CORRESPONDING FIELDS OF TABLE GT_BSEG
    FOR ALL ENTRIES IN T_HEADER
    WHERE B~BUKRS = T_HEADER-BUKRS
    AND B~BELNR = T_HEADER-BELNR
    AND B~GJAHR = T_HEADER-GJAHR
    AND B~BUZEI = T_HEADER-BUZEI
    AND B~BELNR NOT LIKE '6%'
    AND C~BLART IN ('SA','QC')
    AND C~BUDAT BETWEEN BUDAT_L AND BUDAT_H
    AND B~HKONT NOT IN R_HKONT_TZ
    AND ( B~HKONT LIKE '1122010%'
    OR B~HKONT LIKE '1122020%'
    OR B~HKONT LIKE '2203010%'
    OR B~HKONT LIKE '2203020%'
    OR B~HKONT LIKE '1121010%'
    OR B~HKONT LIKE '1121020%'
    )
   .
  SELECT  C~BUDAT C~BUKRS C~BELNR C~GJAHR C~BLART C~WAERS B~VBEL2 B~XNEGP B~SGTXT
     B~BUZEI B~HKONT B~DMBTR B~SHKZG B~KOSTL A~WNAME A~WBZOG A~WBANK FROM BKPF AS C INNER JOIN BSEG AS B
    ON C~BUKRS = B~BUKRS
    AND C~BELNR = B~BELNR
    AND C~GJAHR = B~GJAHR
    LEFT JOIN BSED AS A
    ON B~BUKRS = A~BUKRS
    AND B~BELNR = A~BELNR
    AND B~GJAHR = A~GJAHR
   AND B~BUZEI = A~BUZEI
    APPENDING CORRESPONDING FIELDS OF TABLE GT_BSEG
    FOR ALL ENTRIES IN T_HEADER
    WHERE B~BUKRS = T_HEADER-BUKRS
    AND B~BELNR = T_HEADER-BELNR
    AND B~GJAHR = T_HEADER-GJAHR
    AND B~BELNR NOT LIKE '6%'
    AND C~BLART NOT IN ('SA','QC')
    AND C~BUDAT BETWEEN BUDAT_L AND BUDAT_H
    AND B~HKONT NOT IN R_HKONT_TZ
    AND ( B~HKONT LIKE '1122010%'
    OR B~HKONT LIKE '1122020%'
    OR B~HKONT LIKE '2203010%'
    OR B~HKONT LIKE '2203020%'
    OR B~HKONT LIKE '1121010%'
    OR B~HKONT LIKE '1121020%'
    ).
endif.
IF GT_BSEG[] IS NOT INITIAL.
  SELECT * INTO CORRESPONDING FIELDS OF TABLE GT_CSKT
      FROM  CSKT
      FOR ALL ENTRIES IN GT_BSEG
      WHERE KOSTL = GT_BSEG-KOSTL.
  ENDIF.
  LOOP AT GT_BSEG.
   CLEAR T_ITEM.
   READ TABLE GT_CSKT WITH KEY KOSTL = GT_BSEG-KOSTL.
    IF SY-SUBRC = 0.
      GT_BSEG-LTEXT = GT_CSKT-LTEXT.
      ENDIF.
    MOVE-CORRESPONDING GT_BSEG TO T_ITEM.
    "项目号
    READ TABLE T_HEADER WITH KEY BUKRS = GT_BSEG-BUKRS BELNR = GT_BSEG-BELNR GJAHR = GT_BSEG-GJAHR BUZEI = GT_BSEG-BUZEI BINARY SEARCH.
    IF SY-SUBRC EQ 0.
      T_ITEM-VBELN = T_HEADER-VBEL2.
    ELSE.
      "如果没取到项目号，则到其它行上寻找
      READ TABLE T_HEADER WITH KEY BUKRS = GT_BSEG-BUKRS BELNR = GT_BSEG-BELNR GJAHR = GT_BSEG-GJAHR BINARY SEARCH.
      IF SY-SUBRC EQ 0.
        T_ITEM-VBELN = T_HEADER-VBEL2.
      ENDIF.
    ENDIF.
*    T_ITEM-VBELN = VBELN.
    IF GT_BSEG-SHKZG EQ 'S'.
      T_ITEM-DMBTR_S = GT_BSEG-DMBTR.
    ELSE.
      T_ITEM-DMBTR_H = GT_BSEG-DMBTR.
    ENDIF.
    APPEND T_ITEM.
    CLEAR T_ITEM.
  ENDLOOP.
  SORT T_ITEM BY VBELN BUKRS BELNR GJAHR BUZEI.


ENDFUNCTION.
