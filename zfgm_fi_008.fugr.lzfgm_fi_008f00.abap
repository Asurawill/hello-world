*---------------------------------------------------------------------*
*    view related FORM routines
*   generation date: 2017.11.09 at 14:33:50
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*
*...processing: ZFIV008_1.......................................*
FORM GET_DATA_ZFIV008_1.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZFI008_1 WHERE
(VIM_WHERETAB) .
    CLEAR ZFIV008_1 .
ZFIV008_1-MANDT =
ZFI008_1-MANDT .
ZFIV008_1-BUKRS =
ZFI008_1-BUKRS .
ZFIV008_1-VKORG =
ZFI008_1-VKORG .
ZFIV008_1-AUART =
ZFI008_1-AUART .
ZFIV008_1-BSTYP =
ZFI008_1-BSTYP .
ZFIV008_1-TPTPY =
ZFI008_1-TPTPY .
ZFIV008_1-SAKNR =
ZFI008_1-SAKNR .
    SELECT SINGLE * FROM T001 WHERE
BUKRS = ZFI008_1-BUKRS .
    IF SY-SUBRC EQ 0.
ZFIV008_1-BUTXT =
T001-BUTXT .
    ENDIF.
    SELECT SINGLE * FROM TVKO WHERE
VKORG = ZFI008_1-VKORG .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TVKOT WHERE
VKORG = TVKO-VKORG AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZFIV008_1-VTEXT =
TVKOT-VTEXT .
      ENDIF.
    ENDIF.
    SELECT * FROM SKA1 WHERE
SAKNR = ZFI008_1-SAKNR .
      SELECT SINGLE * FROM SKAT WHERE
KTOPL = SKA1-KTOPL AND
SAKNR = SKA1-SAKNR AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZFIV008_1-TXT20 =
SKAT-TXT20 .
      ENDIF.
      EXIT.
    ENDSELECT.
    SELECT SINGLE * FROM TVAK WHERE
AUART = ZFI008_1-AUART .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TVAKT WHERE
AUART = TVAK-AUART AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZFIV008_1-BEZEI =
TVAKT-BEZEI .
      ENDIF.
    ENDIF.
<VIM_TOTAL_STRUC> = ZFIV008_1.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZFIV008_1 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZFIV008_1.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZFIV008_1-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZFI008_1 WHERE
  BUKRS = ZFIV008_1-BUKRS AND
  VKORG = ZFIV008_1-VKORG AND
  AUART = ZFIV008_1-AUART AND
  BSTYP = ZFIV008_1-BSTYP AND
  TPTPY = ZFIV008_1-TPTPY .
    IF SY-SUBRC = 0.
    DELETE ZFI008_1 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZFI008_1 WHERE
  BUKRS = ZFIV008_1-BUKRS AND
  VKORG = ZFIV008_1-VKORG AND
  AUART = ZFIV008_1-AUART AND
  BSTYP = ZFIV008_1-BSTYP AND
  TPTPY = ZFIV008_1-TPTPY .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZFI008_1.
    ENDIF.
ZFI008_1-MANDT =
ZFIV008_1-MANDT .
ZFI008_1-BUKRS =
ZFIV008_1-BUKRS .
ZFI008_1-VKORG =
ZFIV008_1-VKORG .
ZFI008_1-AUART =
ZFIV008_1-AUART .
ZFI008_1-BSTYP =
ZFIV008_1-BSTYP .
ZFI008_1-TPTPY =
ZFIV008_1-TPTPY .
ZFI008_1-SAKNR =
ZFIV008_1-SAKNR .
    IF SY-SUBRC = 0.
    UPDATE ZFI008_1 .
    ELSE.
    INSERT ZFI008_1 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZFIV008_1-UPD_FLAG,
STATUS_ZFIV008_1-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZFIV008_1.
  SELECT SINGLE * FROM ZFI008_1 WHERE
BUKRS = ZFIV008_1-BUKRS AND
VKORG = ZFIV008_1-VKORG AND
AUART = ZFIV008_1-AUART AND
BSTYP = ZFIV008_1-BSTYP AND
TPTPY = ZFIV008_1-TPTPY .
ZFIV008_1-MANDT =
ZFI008_1-MANDT .
ZFIV008_1-BUKRS =
ZFI008_1-BUKRS .
ZFIV008_1-VKORG =
ZFI008_1-VKORG .
ZFIV008_1-AUART =
ZFI008_1-AUART .
ZFIV008_1-BSTYP =
ZFI008_1-BSTYP .
ZFIV008_1-TPTPY =
ZFI008_1-TPTPY .
ZFIV008_1-SAKNR =
ZFI008_1-SAKNR .
    SELECT SINGLE * FROM T001 WHERE
BUKRS = ZFI008_1-BUKRS .
    IF SY-SUBRC EQ 0.
ZFIV008_1-BUTXT =
T001-BUTXT .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZFIV008_1-BUTXT .
    ENDIF.
    SELECT SINGLE * FROM TVKO WHERE
VKORG = ZFI008_1-VKORG .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TVKOT WHERE
VKORG = TVKO-VKORG AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZFIV008_1-VTEXT =
TVKOT-VTEXT .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZFIV008_1-VTEXT .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZFIV008_1-VTEXT .
    ENDIF.
    SELECT * FROM SKA1 WHERE
SAKNR = ZFI008_1-SAKNR .
      SELECT SINGLE * FROM SKAT WHERE
KTOPL = SKA1-KTOPL AND
SAKNR = SKA1-SAKNR AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZFIV008_1-TXT20 =
SKAT-TXT20 .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZFIV008_1-TXT20 .
      ENDIF.
      EXIT.
    ENDSELECT.
    IF SY-SUBRC NE 0.
      CLEAR SY-SUBRC.
      CLEAR ZFIV008_1-TXT20 .
    ENDIF.
    SELECT SINGLE * FROM TVAK WHERE
AUART = ZFI008_1-AUART .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TVAKT WHERE
AUART = TVAK-AUART AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZFIV008_1-BEZEI =
TVAKT-BEZEI .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZFIV008_1-BEZEI .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZFIV008_1-BEZEI .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZFIV008_1 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZFIV008_1-BUKRS TO
ZFI008_1-BUKRS .
MOVE ZFIV008_1-VKORG TO
ZFI008_1-VKORG .
MOVE ZFIV008_1-AUART TO
ZFI008_1-AUART .
MOVE ZFIV008_1-BSTYP TO
ZFI008_1-BSTYP .
MOVE ZFIV008_1-TPTPY TO
ZFI008_1-TPTPY .
MOVE ZFIV008_1-MANDT TO
ZFI008_1-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZFI008_1'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZFI008_1 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZFI008_1'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_ZFIV008_1 USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
ZFI008_1-MANDT =
ZFIV008_1-MANDT .
ZFI008_1-BUKRS =
ZFIV008_1-BUKRS .
ZFI008_1-VKORG =
ZFIV008_1-VKORG .
ZFI008_1-AUART =
ZFIV008_1-AUART .
ZFI008_1-BSTYP =
ZFIV008_1-BSTYP .
ZFI008_1-TPTPY =
ZFIV008_1-TPTPY .
ZFI008_1-SAKNR =
ZFIV008_1-SAKNR .
    SELECT SINGLE * FROM T001 WHERE
BUKRS = ZFI008_1-BUKRS .
    IF SY-SUBRC EQ 0.
ZFIV008_1-BUTXT =
T001-BUTXT .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZFIV008_1-BUTXT .
    ENDIF.
    SELECT SINGLE * FROM TVKO WHERE
VKORG = ZFI008_1-VKORG .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TVKOT WHERE
VKORG = TVKO-VKORG AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZFIV008_1-VTEXT =
TVKOT-VTEXT .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZFIV008_1-VTEXT .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZFIV008_1-VTEXT .
    ENDIF.
    SELECT * FROM SKA1 WHERE
SAKNR = ZFI008_1-SAKNR .
      SELECT SINGLE * FROM SKAT WHERE
KTOPL = SKA1-KTOPL AND
SAKNR = SKA1-SAKNR AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZFIV008_1-TXT20 =
SKAT-TXT20 .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZFIV008_1-TXT20 .
      ENDIF.
      EXIT.
    ENDSELECT.
    IF SY-SUBRC NE 0.
      CLEAR SY-SUBRC.
      CLEAR ZFIV008_1-TXT20 .
    ENDIF.
    SELECT SINGLE * FROM TVAK WHERE
AUART = ZFI008_1-AUART .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TVAKT WHERE
AUART = TVAK-AUART AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZFIV008_1-BEZEI =
TVAKT-BEZEI .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZFIV008_1-BEZEI .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZFIV008_1-BEZEI .
    ENDIF.
ENDFORM.
