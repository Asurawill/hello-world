FUNCTION ZRFC_OA_SAP_001.
*"----------------------------------------------------------------------
*"*"本地接口：
*"  IMPORTING
*"     VALUE(ZPSPID) TYPE  PS_PSPID OPTIONAL
*"     VALUE(ZKSTAR) TYPE  KSTAR OPTIONAL
*"     VALUE(ZDYXTM) TYPE  CHAR30 OPTIONAL
*"     VALUE(ZBUKRS) TYPE  BUKRS OPTIONAL
*"     VALUE(ZUSNAME) TYPE  CHAR30 OPTIONAL
*"     VALUE(ZBUDAT) TYPE  DATS OPTIONAL
*"  TABLES
*"      GT_YSZQ STRUCTURE  YSZQ
*"----------------------------------------------------------------------


  TYPES:BEGIN OF TY_PROJ,
          PSPID TYPE PROJ-PSPID,
          POST1 TYPE PROJ-POST1,
          OBJNR TYPE PROJ-OBJNR,
          PSPNR TYPE PROJ-PSPNR,
        END OF TY_PROJ.

  TYPES:BEGIN OF TY_COSP,
          OBJNR  TYPE COSP-OBJNR,
          KSTAR  TYPE COSP-KSTAR,
          WTG001 TYPE COSP-WTG001,
          WTG002 TYPE COSP-WTG002,
          WTG003 TYPE COSP-WTG003,
          WTG004 TYPE COSP-WTG004,
          WTG005 TYPE COSP-WTG005,
          WTG006 TYPE COSP-WTG006,
          WTG007 TYPE COSP-WTG007,
          WTG008 TYPE COSP-WTG008,
          WTG009 TYPE COSP-WTG009,
          WTG010 TYPE COSP-WTG010,
          WTG011 TYPE COSP-WTG011,
          WTG012 TYPE COSP-WTG012,
          WTG013 TYPE COSP-WTG013,
          WTG014 TYPE COSP-WTG014,
          WTG015 TYPE COSP-WTG015,
          WTG016 TYPE COSP-WTG016,
        END OF TY_COSP.

  TYPES:BEGIN OF TY_CKIS,
          KALNR TYPE CKIS-KALNR,
          KSTAR TYPE CKIS-KSTAR,
          WERTN TYPE CKIS-WERTN,
        END OF TY_CKIS.

  TYPES:BEGIN OF TY_PRPS,
          PSPNR TYPE PRPS-PSPNR,
          PSPHI TYPE PRPS-PSPHI,
          OBJNR TYPE PRPS-OBJNR,
        END OF TY_PRPS.

  TYPES:BEGIN OF TY_AUFK,
          PSPEL TYPE AUFK-PSPEL,
          OBJNR TYPE AUFK-OBJNR,
        END OF TY_AUFK.

  DATA  GT_PROJ TYPE TABLE OF TY_PROJ.
  DATA  GS_PROJ TYPE TY_PROJ.

  DATA GT_PRECP1 TYPE TABLE OF PRECP1.
  DATA GS_PRECP1 TYPE PRECP1.

  DATA GT_PRECP2 TYPE TABLE OF PRECP2.
  DATA GS_PRECP2 TYPE PRECP2.

  DATA GT_CKIS   TYPE TABLE OF TY_CKIS.
  DATA GS_CKIS   TYPE TY_CKIS.

  DATA GT_CKIS1   TYPE TABLE OF TY_CKIS.
  DATA GS_CKIS1   TYPE TY_CKIS.

  DATA GT_PRPS   TYPE TABLE OF TY_PRPS.
  DATA GS_PRPS   TYPE TY_PRPS.

  DATA GT_AUFK   TYPE TABLE OF TY_AUFK.
  DATA GS_AUFK   TYPE TY_AUFK.

  DATA GT_CSKU   TYPE TABLE OF CSKU.
  DATA GS_CSKU   TYPE CSKU.

  DATA GT_COSP   TYPE TABLE OF COSP.
  DATA GS_COSP   TYPE COSP.

  DATA GT_COSP1   TYPE TABLE OF COSP.
  DATA GS_COSP1   TYPE COSP.

  DATA GS_YSZQ   TYPE YSZQ.

  DATA:GT_CKHS  TYPE TABLE OF CKHS ,
       GS_CKHS  TYPE CKHS.

  DATA L_PSPID   TYPE PROJ-PSPID.
  DATA L_POST1   TYPE PROJ-POST1.

  IF ZPSPID IS INITIAL .
    SELECT PSPID POST1 OBJNR PSPNR
      INTO TABLE GT_PROJ
      FROM PROJ.
  ELSE.
    SELECT PSPID POST1 OBJNR PSPNR
  INTO TABLE GT_PROJ
  FROM PROJ
  WHERE PSPID = ZPSPID.
  ENDIF.


  IF GT_PROJ IS NOT INITIAL.

    SELECT * FROM PRECP1
      INTO CORRESPONDING FIELDS OF TABLE GT_PRECP1
     FOR ALL ENTRIES IN GT_PROJ
     WHERE TOPNR = GT_PROJ-OBJNR
     AND   VERSN = '000'.

    SELECT * FROM PRECP2
      INTO CORRESPONDING FIELDS OF TABLE GT_PRECP2
     FOR ALL ENTRIES IN GT_PRECP1
     WHERE TOPNR = GT_PRECP1-TOPNR
     AND   VERSN = '000'.

    IF ZKSTAR IS INITIAL.
      SELECT
         LEDNR
         BZOBJ
         KALNR
         KALKA
         KADKY
         TVERS
         BWVAR
         KKZMA
         POSNR
         KSTAR
         WERTN
        FROM CKIS
        INTO CORRESPONDING FIELDS OF TABLE GT_CKIS
        FOR ALL ENTRIES IN GT_PRECP2
        WHERE KALNR = GT_PRECP2-KALNR.
    ELSE.
      SELECT
         LEDNR
         BZOBJ
         KALNR
         KALKA
         KADKY
         TVERS
         BWVAR
         KKZMA
         POSNR
         KSTAR
         WERTN
         FROM CKIS
         INTO CORRESPONDING FIELDS OF TABLE GT_CKIS
         FOR ALL ENTRIES IN GT_PRECP2
         WHERE KALNR = GT_PRECP2-KALNR
         AND   KSTAR = ZKSTAR.
    ENDIF.

*    *  查询日期（包含）之后的单位成本核算编号 抬头数据
  IF ZBUDAT IS NOT INITIAL.
    SELECT *  INTO CORRESPONDING FIELDS  OF TABLE GT_CKHS
      FROM CKHS
      FOR ALL ENTRIES IN GT_PRECP2
      WHERE KALNR = GT_PRECP2-KALNR
      AND  AENDT >= ZBUDAT .
    SORT GT_CKHS BY KALNR.
   ELSE.
      SELECT *  INTO CORRESPONDING FIELDS  OF TABLE GT_CKHS
      FROM CKHS
      FOR ALL ENTRIES IN GT_PRECP2
      WHERE KALNR = GT_PRECP2-KALNR .
   SORT GT_CKHS BY KALNR.
   ENDIF.


    GT_CKIS1 = GT_CKIS.
    SORT GT_CKIS1 BY KALNR KSTAR.
    DELETE ADJACENT DUPLICATES FROM GT_CKIS1  COMPARING KALNR KSTAR.

    SELECT
      PSPNR PSPHI OBJNR
      FROM PRPS
      INTO CORRESPONDING FIELDS OF TABLE GT_PRPS
      FOR ALL ENTRIES IN GT_PROJ
      WHERE PSPHI = GT_PROJ-PSPNR.

    SELECT
      PSPEL OBJNR
      FROM AUFK
     INTO CORRESPONDING FIELDS OF TABLE GT_AUFK
      FOR ALL ENTRIES IN GT_PRPS
      WHERE PSPEL = GT_PRPS-PSPNR
      AND   BUKRS = '1800'.

    SELECT  OBJNR
            KSTAR
            WTG001
            WTG002
            WTG003
            WTG004
            WTG005
            WTG006
            WTG007
            WTG008
            WTG009
            WTG010
            WTG011
            WTG012
            WTG013
            WTG014
            WTG015
            WTG016
     FROM COSP
     INTO CORRESPONDING FIELDS OF TABLE GT_COSP
     FOR ALL ENTRIES IN GT_PRPS
     WHERE OBJNR = GT_PRPS-OBJNR.

    SELECT  OBJNR
           KSTAR
           WTG001
           WTG002
           WTG003
           WTG004
           WTG005
           WTG006
           WTG007
           WTG008
           WTG009
           WTG010
           WTG011
           WTG012
           WTG013
           WTG014
           WTG015
           WTG016
    FROM COSP
    INTO CORRESPONDING FIELDS OF TABLE GT_COSP1
    FOR ALL ENTRIES IN GT_AUFK
    WHERE OBJNR = GT_AUFK-OBJNR.

    SELECT * FROM CSKU
      INTO CORRESPONDING FIELDS OF TABLE GT_CSKU
      FOR ALL ENTRIES IN GT_CKIS1
      WHERE KSTAR = GT_CKIS1-KSTAR
      AND   KTOPL = '1000'
      AND   SPRAS = '1'.
  ENDIF.

  LOOP AT GT_PROJ INTO GS_PROJ.

    CLEAR:L_PSPID,
          L_POST1.

    L_PSPID = GS_PROJ-PSPID.
    L_POST1 = GS_PROJ-POST1.

    READ TABLE GT_PRECP1 INTO GS_PRECP1
    WITH KEY TOPNR = GS_PROJ-OBJNR
             VERSN = '000'.
    IF SY-SUBRC = 0.

      READ TABLE GT_PRECP2 INTO GS_PRECP2
      WITH KEY TOPNR = GS_PRECP1-TOPNR
               VERSN = '000'..
      IF SY-SUBRC = 0.
          READ TABLE GT_CKHS INTO GS_CKHS WITH KEY KALNR = GS_PRECP2-KALNR BINARY SEARCH .
            IF SY-SUBRC NE 0.
                CONTINUE.           "排除成本估算编号不在查询出估算编号表项目范围内 的项目
            ENDIF.
        LOOP AT GT_CKIS1 INTO GS_CKIS1
         WHERE KALNR = GS_PRECP2-KALNR.

*项目
          GS_YSZQ-ZPSPID = GS_PROJ-PSPID.

          GS_YSZQ-ZPOST1 = GS_PROJ-POST1.

*成本要素
          GS_YSZQ-ZKSTAR = GS_CKIS1-KSTAR.

*成本要素
          READ TABLE GT_CSKU INTO GS_CSKU
          WITH KEY KSTAR = GS_CKIS1-KSTAR
                   KTOPL = '1000'
                   SPRAS = '1'.
          IF SY-SUBRC = 0.
            GS_YSZQ-ZKTEXT = GS_CSKU-KTEXT.
          ENDIF.

*成本预算金额
          LOOP AT GT_CKIS INTO GS_CKIS
           WHERE KSTAR = GS_CKIS1-KSTAR
           AND   KALNR = GS_CKIS1-KALNR.
            GS_YSZQ-ZBUDGET = GS_YSZQ-ZBUDGET +  GS_CKIS-WERTN.
          ENDLOOP.

*累计实际消耗日期
          READ TABLE GT_PRPS INTO GS_PRPS
          WITH KEY PSPHI = GS_PROJ-PSPNR.
          IF SY-SUBRC = 0.
            LOOP AT GT_COSP INTO GS_COSP
             WHERE KSTAR = GS_CKIS-KSTAR
             AND   OBJNR = GS_PRPS-OBJNR.
              GS_YSZQ-ZCOST = GS_COSP-WTG001 + GS_COSP-WTG002 + GS_COSP-WTG003 + GS_COSP-WTG004
                            + GS_COSP-WTG005 + GS_COSP-WTG006 + GS_COSP-WTG007 + GS_COSP-WTG008
                            + GS_COSP-WTG009 + GS_COSP-WTG010 + GS_COSP-WTG011 + GS_COSP-WTG012
                            + GS_COSP-WTG013 + GS_COSP-WTG014 + GS_COSP-WTG015 + GS_COSP-WTG016.
            ENDLOOP.
          ENDIF.

          READ TABLE GT_AUFK INTO GS_AUFK
          WITH KEY PSPEL = GS_PRPS-PSPNR.
          IF SY-SUBRC = 0.
            LOOP AT GT_COSP1 INTO GS_COSP1
              WHERE KSTAR = GS_CKIS-KSTAR
              AND   OBJNR = GS_AUFK-OBJNR.
              GS_YSZQ-ZCOST = GS_COSP1-WTG001 + GS_COSP1-WTG002 + GS_COSP1-WTG003 + GS_COSP1-WTG004
                            + GS_COSP1-WTG005 + GS_COSP1-WTG006 + GS_COSP1-WTG007 + GS_COSP1-WTG008
                            + GS_COSP1-WTG009 + GS_COSP1-WTG010 + GS_COSP1-WTG011 + GS_COSP1-WTG012
                            + GS_COSP1-WTG013 + GS_COSP1-WTG014 + GS_COSP1-WTG015 + GS_COSP1-WTG016.
            ENDLOOP.
          ENDIF.

*日期
          GS_YSZQ-ZDATE = SY-DATUM.

*时间
          GS_YSZQ-ZTIME = SY-UZEIT.

*状态
          GS_YSZQ-ZSTATU = 'S'.

          APPEND GS_YSZQ TO GT_YSZQ.
          CLEAR GS_YSZQ.
        ENDLOOP.
      ENDIF.
    ENDIF.
  ENDLOOP.

*记录日志数据
  DATA GT_ZZACKNOW TYPE TABLE OF ZZACKNOW.
  DATA GS_ZZACKNOW TYPE ZZACKNOW.

  CLEAR GS_ZZACKNOW.
  REFRESH GT_ZZACKNOW.

  IF GT_YSZQ[] IS INITIAL.
    GS_ZZACKNOW-ZZPROFG = 'E'.
    GS_ZZACKNOW-ZZCOMEN = '系统中不存在项目预算数据，请核算'.
  ELSE.
    GS_ZZACKNOW-ZZPROFG = 'S'.
    GS_ZZACKNOW-ZZCOMEN = '已成功读取项目预算实际值'.
  ENDIF.

  GS_ZZACKNOW-ZZDYXTM  = ZDYXTM.     "调用系统名
  GS_ZZACKNOW-ZZINTTY = 'YSZQ'.
  GS_ZZACKNOW-ZZCDATE = SY-DATUM.
  GS_ZZACKNOW-ZZCTIME = SY-UZEIT.
  GS_ZZACKNOW-ZBUKRS  = ZBUKRS.    "公司代码
  GS_ZZACKNOW-USNAM   = ZUSNAME .   "用户名


  APPEND GS_ZZACKNOW TO GT_ZZACKNOW.
  MODIFY ZZACKNOW FROM TABLE GT_ZZACKNOW.

ENDFUNCTION.
